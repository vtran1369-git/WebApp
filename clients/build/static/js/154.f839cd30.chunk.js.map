{"version":3,"file":"static/js/154.f839cd30.chunk.js","mappings":"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","sources":["api/http-common.js","components/Header.js","components/NewWorkOrder.js"],"sourcesContent":["import axios from 'axios'\r\nexport default axios.create({\r\n    baseURL: process.env.REACT_APP_BASE_URL\r\n})\r\n\r\n// console.log(\"env: \", process.env)\r\nconsole.log(\"env: \", process.env.REACT_APP_BASE_URL)\r\n\r\n","const  Header = (props) => {\r\n    return  <div className=\"form-header\" style={{textAlign: \"center\"}}>\r\n                <h1>{props.name}</h1>\r\n            </div>\r\n}\r\n\r\nexport default Header;","import React, { useState, useEffect } from 'react';\r\nimport ReactDatePicker from 'react-datepicker';\r\nimport  { useForm } from 'react-hook-form';\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\n// import '../Form.css'\r\nimport Header from './Header'\r\nimport {Grid} from '@material-ui/core'\r\nimport http from '../api/http-common'\r\n\r\nexport default function App() {\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    const [custNames, setCustNames] = useState([]);\r\n    const CustomerNames = custNames.map(custName => custName)\r\n\r\n    const onSubmit = data => {\r\n        data.reqDate = reqDate;\r\n        console.log(\"submit data: \", data);\r\n    }\r\n\r\n    console.log(errors);\r\n    const [ reqDate, setReqDate ] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n        http.get(\"/customers\")\r\n        .then((res) => {\r\n            const customers = res.data.customers;\r\n            const data =customers.map(item => { \r\n            const obj = {};\r\n            obj.id = item.id_customer;\r\n            obj.name = item.name;\r\n            return obj;\r\n        } );\r\n        setCustNames(data);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        \r\n        <div className=\"form-container wo\">\r\n            <Header name=\"New Work Order Registry\" />\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Grid container xs={12} spacing=\"1\" direction=\"row\" justify=\"flex-start\">\r\n                    {/* <Grid container xs={12}> */}\r\n                        <Grid item xs={4} className=\"form-control\">\r\n                            <label>Work Order</label>\r\n                        </Grid>\r\n                        <Grid item xs={8} sn={8} className=\"form-control\">    \r\n                            <input type=\"text\" {...register(\"Work Order\", {required: true, maxLength: 20})} />\r\n                        </Grid>\r\n                    {/* </Grid> */}\r\n                    {/* <Grid container xs={12}> */}\r\n                        <Grid item xs={4} className=\"form-control\">\r\n                            <label>Part Number</label>\r\n                        </Grid>\r\n                        <Grid item xs={8} className=\"form-control\">\r\n                            <input type=\"text\" {...register(\"Part Number\", {required: true, maxLength: 100})} />\r\n                        </Grid>\r\n                    {/* </Grid> */}\r\n                        <Grid item  xs={4} className=\"form-control\">\r\n                            <label>Customer</label>\r\n                        </Grid>\r\n                        <Grid item xs={8}  className=\"form-control\">    \r\n                            < select \r\n                                /* onClick={handleClick}\r\n                                onChange={e => handleCustNameChange(e)} */\r\n                            >\r\n                                { CustomerNames.map((custName, key) => <option key={key} value={custName.id}>{custName.name}</option>) }\r\n                            </select >\r\n                        </Grid>   \r\n                    {/* <Grid container xs={12}> */}\r\n                        <Grid item xs={4} className=\"form-control\">\r\n                            <label>Quantity</label>\r\n                        </Grid>\r\n                        <Grid item xs={8} className=\"form-control\">    \r\n                            <input type=\"number\" {...register(\"Quantiy\", {required: true, min: 1})} />\r\n                        </Grid>\r\n                    {/* </Grid> */}\r\n                    {/* <Grid container xs={12}> */}\r\n                        <Grid item xs={4} className=\"form-control\">\r\n                            <label>Required Date</label>\r\n                        </Grid>\r\n                        <Grid item xs={8} className=\"form-control\">    \r\n                            <ReactDatePicker\r\n                                selected = {reqDate}\r\n                                dateFormat=\"MM/dd/yyyy\"\r\n                                onChange = { reqDate => setReqDate(reqDate) }\r\n                            />\r\n                        </Grid>\r\n                    {/* </Grid> */}\r\n                    {/* <Grid container xs={12}> */}\r\n                        <Grid item xs={4} className=\"form-control\">\r\n                            <label>Status</label>\r\n                        </Grid>\r\n                        <Grid item xs={8} className=\"form-control\">    \r\n                            <input type=\"text\" {...register(\"Status\", {required: true})} />\r\n                        </Grid>\r\n                    {/* </Grid> */}\r\n                    {/* <Grid container xs={12}>     */}\r\n                        <Grid item xs={4} className=\"form-control\">\r\n                            <label>Instructions</label>\r\n                        </Grid>\r\n                        <Grid item xs={8} className=\"form-control\">    \r\n                            <textarea rows={5} type=\"text\" {...register} />\r\n                        </Grid>  \r\n                    {/* </Grid>  */}\r\n                    <Grid container xs={12}>\r\n                        <Grid item xs={4} className=\"form-control\"></Grid>\r\n                        <Grid item xs={8} className=\"form-control\"><input type=\"submit\" /></Grid>\r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n            </form>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["axios","create","baseURL","process","console","log","props","_jsx","className","style","textAlign","children","name","App","_useForm","useForm","register","handleSubmit","errors","formState","_useState","useState","_useState2","_slicedToArray","custNames","setCustNames","CustomerNames","map","custName","_useState3","_useState4","reqDate","setReqDate","useEffect","http","get","then","res","data","customers","item","obj","id","id_customer","_Fragment","_jsxs","Header","onSubmit","Grid","container","xs","spacing","direction","justify","sn","_objectSpread","type","required","maxLength","key","value","min","ReactDatePicker","selected","dateFormat","onChange","rows"],"sourceRoot":""}