{"version":3,"file":"static/js/714.59d067ef.chunk.js","mappings":"uHACA,IAAeA,EAAAA,EAAMC,OAAO,CACxBC,QAASC,8BAIbC,QAAQC,IAAI,QAASF,4B,qJCwBrB,GACIG,OA7BW,WACX,OAAOC,EAAAA,EAAKC,IAAI,aACpB,EA4BIA,IA1BQ,SAAAC,GACR,OAAOF,EAAAA,EAAKC,IAAI,cAADE,OAAeD,GAClC,EAyBIR,OAvBW,SAAAU,GACX,OAAOJ,EAAAA,EAAKK,KAAK,aAAcD,EACnC,EAsBIE,OApBW,SAACJ,EAAIE,GAChB,OAAOJ,EAAAA,EAAKO,IAAI,cAADJ,OAAeD,GAAME,EACxC,EAmBII,OAjBW,SAAAN,GACX,OAAOF,EAAAA,EAAKS,OAAO,cAADN,OAAeD,GACrC,EAgBIQ,UAdc,WACd,OAAOV,EAAAA,EAAKS,OAAO,aACvB,EAaIE,WAXe,SAAAC,GACf,OAAOZ,EAAAA,EAAKC,IAAI,mBAADE,OAAoBS,GACvC,G,WCrBe,SAASC,IACpB,IAUAC,GAAkCC,EAAAA,EAAAA,UAVL,CACzBH,KAAM,GACNI,QAAS,GACTC,KAAM,GACNC,MAAO,GACPC,QAAS,KACTC,UAAW,GACXC,QAAS,KAGmDC,GAAAC,EAAAA,EAAAA,GAAAT,EAAA,GAA9CU,GAAFF,EAAA,GAAaA,EAAA,IAC7BG,GAAoCV,EAAAA,EAAAA,WAAS,GAAMW,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA3CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC/BG,GAAiEC,EAAAA,EAAAA,MAAzDC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAA2BC,EAAMJ,EAAnBK,UAAaD,OAAUE,EAAKN,EAALM,MAEvDtC,QAAQC,IAAImC,GAqBZ,OACIG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAEAC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBF,SAAA,EACpCF,EAAAA,EAAAA,KAACK,EAAAA,EAAM,CAAC7B,KAAK,qBACZe,GACGY,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACAF,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mCAERF,EAAAA,EAAAA,KAAA,UAAQI,UAAU,kBAAkBE,QAhB5B,WAEhBd,GAAa,GACbO,GACJ,EAYqEG,SAAC,YAK1DF,EAAAA,EAAAA,KAAA,QAAMO,SAAUX,GAlCX,SAAAY,GACb/C,QAAQC,IAAI,oBAAqB8C,GACjCpB,EAAYoB,GACZC,EAAgBnD,OAAOkD,GAClBE,MAAK,SAAAC,GACFnB,GAAa,GACb/B,QAAQC,IAAIiD,EAAI3C,KACpB,IACC4C,OAAM,SAAAC,GACHpD,QAAQC,IAAImD,EAChB,GACR,IAuBmDX,UACvCC,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACC,WAAS,EAACC,GAAI,GAAIC,QAAQ,IAAIC,UAAU,MAAMC,QAAQ,aAAYjB,SAAA,EACpEC,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACC,WAAS,EAACC,GAAI,GAAGd,SAAA,EACnBF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,EAAGZ,UAAU,eAAcF,UACtCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,qBAEXC,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,EAAGK,GAAI,EAAGjB,UAAU,eAAcF,SAAA,EAC7CF,EAAAA,EAAAA,KAAA,SAAAsB,EAAAA,EAAAA,GAAA,CAAOC,KAAK,OACRC,aAAa,OACT7B,EAAS,OAAQ,CAAC8B,SAAU,eAEnC5B,EAAOrB,MAAQqB,EAAOrB,KAAKkD,eAGpCvB,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACC,WAAS,EAACC,GAAI,GAAGd,SAAA,EACnBF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,EAAGZ,UAAU,eAAcF,UACtCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,eAEXC,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,EAAGZ,UAAU,eAAcF,SAAA,EACtCF,EAAAA,EAAAA,KAAA,SAAAsB,EAAAA,EAAAA,GAAA,CAAOC,KAAK,QAAW5B,EAAS,UAAW,CAAC8B,SAAU,eACrD5B,EAAOjB,SAAWiB,EAAOjB,QAAQ8C,eAG1CvB,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACC,WAAS,EAACC,GAAI,GAAGd,SAAA,EACnBF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,EAAGZ,UAAU,eAAcF,UACtCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,YAEXC,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,EAAGZ,UAAU,eAAcF,SAAA,EACtCF,EAAAA,EAAAA,KAAA,SAAAsB,EAAAA,EAAAA,GAAA,CAAOC,KAAK,QAAW5B,EAAS,OAAQ,CAAC8B,SAAS,eACjD5B,EAAOhB,MAAQgB,EAAOhB,KAAK6C,eAGpCvB,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACC,WAAS,EAACC,GAAI,GAAGd,SAAA,EACnBF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,EAAGZ,UAAU,eAAcF,UACtCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,aAEXC,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,EAAGZ,UAAU,eAAcF,SAAA,EACtCF,EAAAA,EAAAA,KAAA,SAAAsB,EAAAA,EAAAA,GAAA,CAAOC,KAAK,QAAW5B,EAAS,QAAS,CAAC8B,SAAU,eACnD5B,EAAOf,OAASe,EAAOf,MAAM4C,eAGtCvB,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACC,WAAS,EAACC,GAAI,GAAGd,SAAA,EACnBF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,EAAGZ,UAAU,eAAcF,UACtCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,gBAEXF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,EAAGZ,UAAU,eAAcF,UACtCF,EAAAA,EAAAA,KAAA,SAAAsB,EAAAA,EAAAA,GAAA,CAAOC,KAAK,QAAW5B,EAAS,UAAW,CAAC8B,UAAU,YAG9DtB,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACC,WAAS,EAACC,GAAI,GAAGd,SAAA,EACnBF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,EAAGZ,UAAU,eAAcF,UACtCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,oBAEXF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,EAAGZ,UAAU,eAAcF,UACtCF,EAAAA,EAAAA,KAAA,SAAAsB,EAAAA,EAAAA,GAAA,CAAOC,KAAK,QAAW5B,EAAS,YAAa,CAAC8B,UAAU,YAGhEtB,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACC,WAAS,EAACC,GAAI,GAAGd,SAAA,EACnBF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,EAAGZ,UAAU,eAAcF,UACtCF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,kBAEXF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,EAAGZ,UAAU,eAAcF,UACtCF,EAAAA,EAAAA,KAAA,SAAAsB,EAAAA,EAAAA,GAAA,CAAOC,KAAK,QAAW5B,EAAS,UAAW,CAAC8B,UAAU,YAG9DtB,EAAAA,EAAAA,MAACW,EAAAA,EAAI,CAACC,WAAS,EAACC,GAAI,GAAGd,SAAA,EACnBF,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,KACfhB,EAAAA,EAAAA,KAACc,EAAAA,EAAI,CAACM,MAAI,EAACJ,GAAI,EAAGZ,UAAU,eAAcF,UAACF,EAAAA,EAAAA,KAAA,SAAOuB,KAAK,yBAS/E,C,uCChIA,IANgB,SAACI,GACb,OAAQ3B,EAAAA,EAAAA,KAAA,OAAKI,UAAU,cAAcwB,MAAO,CAACC,UAAW,UAAU3B,UACtDF,EAAAA,EAAAA,KAAA,MAAAE,SAAKyB,EAAMnD,QAE3B,C","sources":["api/http-common.js","api/CustomerService.js","components/AddCustomer.js","components/Header.js"],"sourcesContent":["import axios from 'axios'\r\nexport default axios.create({\r\n    baseURL: process.env.REACT_APP_BASE_URL\r\n})\r\n\r\n// console.log(\"env: \", process.env)\r\nconsole.log(\"env: \", process.env.REACT_APP_BASE_URL)\r\n\r\n","import http from './http-common'\r\n\r\nconst getAll = () => {\r\n    return http.get(\"/customers\")\r\n}\r\n\r\nconst get = id => {\r\n    return http.get(`/customers/${id}`)\r\n}\r\n\r\nconst create = data => {\r\n    return http.post(\"/customers\", data)\r\n};\r\n\r\nconst update = (id, data) => {\r\n    return http.put(`/customers/${id}`, data)\r\n}\r\n\r\nconst remove = id => {\r\n    return http.delete(`/cusomters/${id}`)\r\n}\r\n\r\nconst removeAll = () => {\r\n    return http.delete(`/customers`)\r\n}\r\n\r\nconst findByName = name => {\r\n    return http.get(`/cusomters?name=${name}`)\r\n}\r\n\r\nexport default{\r\n    getAll,\r\n    get,\r\n    create,\r\n    update,\r\n    remove,\r\n    removeAll,\r\n    findByName\r\n} ","import React, { useState } from 'react';\r\nimport  { useForm } from 'react-hook-form';\r\n// import '../Form.css'\r\nimport Header from './Header'\r\nimport {Grid} from '@material-ui/core'\r\nimport CustomerService from '../api/CustomerService'\r\n\r\nexport default function App() {\r\n    const initialCustomerState = {\r\n        name: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zipcode: null,\r\n        phone_num: \"\",\r\n        fax_num: \"\"\r\n    }\r\n\r\n    const [ customer, setCustomer ] = useState(initialCustomerState)\r\n    const [ submitted, setSubmitted ] = useState(false)\r\n    const { register, handleSubmit, formState: { errors }, reset } = useForm();\r\n\r\n    console.log(errors);\r\n\r\n    const onSubmit = customer => {\r\n        console.log(\"submit customer: \", customer);\r\n        setCustomer(customer); //do we need to ?\r\n        CustomerService.create(customer)\r\n            .then(res => {\r\n                setSubmitted(true);\r\n                console.log(res.data)\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    }\r\n    \r\n    const newCustomer = () => {\r\n        //setCustomer(initialCustomerState);\r\n        setSubmitted(false);\r\n        reset()\r\n    }\r\n\r\n    return (\r\n        <>\r\n       \r\n        <div className=\"form-container customer\">\r\n            <Header name=\"Add New Customer\" />\r\n            {submitted ? (\r\n                <>\r\n                <div>\r\n                    <h4>You submitted successfully!</h4>\r\n                </div>\r\n                <button className=\"btn btn-success\" onClick={newCustomer}>\r\n                    Add\r\n                </button>\r\n                </>\r\n            ):(\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                <Grid container xs={12} spacing=\"1\" direction=\"row\" justify=\"flex-start\">\r\n                    <Grid container xs={12}>\r\n                        <Grid item xs={4} className=\"form-control\">\r\n                            <label>Customer Name</label>\r\n                        </Grid>\r\n                        <Grid item xs={8} sn={8} className=\"form-control\">    \r\n                            <input type=\"text\"   // name=\"cust_name\"\r\n                                autoComplete=\"off\"\r\n                                {...register(\"name\", {required: \"Required\"})}\r\n                            />\r\n                            {errors.name && errors.name.message}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container xs={12}>\r\n                        <Grid item xs={4} className=\"form-control\">\r\n                            <label>Address</label>\r\n                        </Grid>\r\n                        <Grid item xs={8} className=\"form-control\">\r\n                            <input type=\"text\" {...register(\"address\", {required: \"Required\"})} />\r\n                            {errors.address && errors.address.message}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container xs={12}>\r\n                        <Grid item xs={4} className=\"form-control\">\r\n                            <label>City</label>\r\n                        </Grid>\r\n                        <Grid item xs={8} className=\"form-control\">    \r\n                            <input type=\"text\" {...register(\"city\", {required:\"Required\"})} />\r\n                            {errors.city && errors.city.message}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container xs={12}>\r\n                        <Grid item xs={4} className=\"form-control\">\r\n                            <label>State</label>\r\n                        </Grid>\r\n                        <Grid item xs={8} className=\"form-control\">    \r\n                            <input type=\"text\" {...register(\"state\", {required: \"Required\"})} />\r\n                            {errors.state && errors.state.message}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container xs={12}>\r\n                        <Grid item xs={4} className=\"form-control\">\r\n                            <label>Zip Code</label>\r\n                        </Grid>\r\n                        <Grid item xs={8} className=\"form-control\">    \r\n                            <input type=\"text\" {...register(\"zipcode\", {required: false})} />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container xs={12}>\r\n                        <Grid item xs={4} className=\"form-control\">\r\n                            <label>Phone Number</label>\r\n                        </Grid>\r\n                        <Grid item xs={8} className=\"form-control\">    \r\n                            <input type=\"text\" {...register(\"Phone_num\", {required: false})} />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container xs={12}>\r\n                        <Grid item xs={4} className=\"form-control\">\r\n                            <label>Fax Number</label>\r\n                        </Grid>\r\n                        <Grid item xs={8} className=\"form-control\">    \r\n                            <input type=\"text\" {...register(\"Fax_num\", {required: false})} />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container xs={12}>\r\n                        <Grid item xs={4}></Grid>\r\n                        <Grid item xs={8} className=\"form-control\"><input type=\"submit\" /></Grid>\r\n                    </Grid>    \r\n                </Grid>\r\n            </form>\r\n            )\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","const  Header = (props) => {\r\n    return  <div className=\"form-header\" style={{textAlign: \"center\"}}>\r\n                <h1>{props.name}</h1>\r\n            </div>\r\n}\r\n\r\nexport default Header;"],"names":["axios","create","baseURL","process","console","log","getAll","http","get","id","concat","data","post","update","put","remove","delete","removeAll","findByName","name","App","_useState","useState","address","city","state","zipcode","phone_num","fax_num","_useState2","_slicedToArray","setCustomer","_useState3","_useState4","submitted","setSubmitted","_useForm","useForm","register","handleSubmit","errors","formState","reset","_jsx","_Fragment","children","_jsxs","className","Header","onClick","onSubmit","customer","CustomerService","then","res","catch","e","Grid","container","xs","spacing","direction","justify","item","sn","_objectSpread","type","autoComplete","required","message","props","style","textAlign"],"sourceRoot":""}