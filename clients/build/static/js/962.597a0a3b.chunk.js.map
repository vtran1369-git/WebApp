{"version":3,"file":"static/js/962.597a0a3b.chunk.js","mappings":"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","sources":["Utils/BackToPreviousPage.js","Utils/usePersistedState.js","api/MfcCalService.js","api/auth-header.js","api/http-common.js","components/Tables/CDMTable.js","components/CDMList.js","components/Header.js"],"sourcesContent":["import React from 'react'\r\n\r\nconst BackToPreviousPage = () => {\r\n    return(\r\n      <>\r\n      <div><button style={{height: \"28px\"}} onClick={()=>window.location.reload()} >Back To Listing Page</button></div>\r\n      </>\r\n    )\r\n  }\r\n\r\n  export default BackToPreviousPage","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function usePersistedState(key, defaultValue) {\r\n    const [state, setState] = React.useState(\r\n      () => JSON.parse(localStorage.getItem(key)) || defaultValue\r\n    );\r\n    useEffect(() => {\r\n      localStorage.setItem(key, JSON.stringify(state));\r\n    }, [key, state]);\r\n    return [state, setState];\r\n  }","import http from './http-common'\r\nimport authHeader from './auth-header'\r\n\r\nconst getAll = (recordCount) => {\r\n    return http.get(`/mfccal/all/${recordCount}`)\r\n}\r\n\r\nconst getByWO= (data) => {\r\n    // console.log(`data from getByWO IS ${data}`)\r\n    return http.post(\"/mfccal/getByWO\", { data: data })\r\n}\r\n\r\nconst getBySN= (data) => {\r\n    console.log(`data from getBySN IS ${data}`)\r\n    return http.post(\"/mfccal/getBySN\", { data: data })\r\n}\r\n\r\nconst getLimitAll = (data) => {\r\n    return http.post(\"/mfccal/limitall\", { data: data, headers: authHeader() })  \r\n}\r\n\r\n/* const getLimitAll = (data) => {\r\n    return http.post(\"/mfccal/limitall\", data)\r\n} */\r\n\r\nconst getById = id => {\r\n    return http.get(`/mfccal/onebyid/${id}`)\r\n}\r\n\r\nconst create = data => {\r\n    return http.post(\"/mfccal\", data)\r\n};\r\n\r\nconst update = (id, data) => {\r\n    return http.put(`/mfccal/update/${id}`, data)\r\n}\r\n\r\nconst remove = id => {\r\n    return http.delete(`/mfccal/${id}`)\r\n}\r\n\r\nconst removeAll = () => {\r\n    return http.delete(`/mfccal`)\r\n}\r\n\r\nconst findByName = name => {\r\n    return http.get(`/mfccal?name=${name}`)\r\n}\r\n\r\n/*** equiptment calibration */\r\n/* const getAllEquipCal = () => { \r\n    return http.post(\"mfccal/cert/equipment/all\", {headers: authHeader() })\r\n    // return http.get(\"mfccal/cert/equipment/all\", {headers: authHeader() })\r\n} */\r\n\r\nconst getAllEquipCal = () => { \r\n    return http.get(\"mfccal/cert/equipment/all\")\r\n}\r\n\r\nconst updateEquipCal = (id, data) => {\r\n    return http.put(`/mfccal/cert/equipment/update/${id}`, data)\r\n}\r\n\r\nconst loadCert = (id) => {\r\n    return  http.get(`/mfccal/cert/equipment/download/${id}`, {\r\n            responseType: 'arraybuffer',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/pdf'\r\n            }\r\n        })\r\n}\r\n\r\n\r\nasync function getCertByID(id) {\r\n    return http.get(`/mfccal/cert/getcert/${id}`);\r\n  }\r\n\r\nasync function getDataReportByID(id) {\r\n    return http.get(`/mfccal/cert/getreport/${id}`);\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    getLimitAll,\r\n    getById,\r\n    create,\r\n    update,\r\n    remove,\r\n    removeAll,\r\n    findByName,\r\n    getCertByID,\r\n    getDataReportByID,\r\n    getAllEquipCal,\r\n    updateEquipCal,\r\n    loadCert,\r\n    getByWO,\r\n    getBySN\r\n}\r\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\n  } else {\n    return {};\n  }\n}","import axios from 'axios'\r\nexport default axios.create({\r\n    baseURL: process.env.REACT_APP_BASE_URL\r\n})\r\n\r\n// console.log(\"env: \", process.env)\r\nconsole.log(\"env: \", process.env.REACT_APP_BASE_URL)\r\n\r\n","\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { useTable, usePagination, useFilters, useSortBy, useRowSelect } from \"react-table\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nfunction Table({\r\n    columns,\r\n    data,\r\n    fetchData,\r\n    loading,\r\n    pageCount: controlledPageCount,\r\n    onclick,\r\n    handlePrintCert\r\n}) {\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n        Filter: TextFilter,\r\n        }),\r\n        []\r\n    )\r\n\r\n    function TextFilter({\r\n        column: { filterValue, preFilteredRows, setFilter },\r\n    }) {\r\n        const count = preFilteredRows.length\r\n        return (\r\n        <input\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n            setFilter(e.target.value || undefined)\r\n            }}\r\n            placeholder={`Search ${count} records...`}\r\n        />\r\n        )\r\n    }\r\n\r\n    const IndeterminateCheckbox = React.forwardRef(\r\n        ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef = ref || defaultRef\r\n    \r\n        React.useEffect(() => {\r\n          resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n        return (\r\n            <>\r\n                <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n            </>\r\n        )\r\n        }\r\n    )\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        // Get the state from the instance\r\n        state: { pageIndex, pageSize },\r\n    } = useTable(\r\n        {\r\n          columns,\r\n          data,\r\n          defaultColumn,\r\n          initialState: { pageIndex: 0 , pageSize: 20}, // Pass our hoisted table state\r\n          manualPagination: true, // Tell the usePagination\r\n          // hook that we'll handle our own data fetching\r\n          // This means we'll also have to provide our own\r\n          // pageCount.\r\n          pageCount: controlledPageCount,\r\n          autoResetFilter: false,\r\n          autoResetPage: false\r\n        },\r\n        useFilters,\r\n        useSortBy,\r\n        usePagination,\r\n        useRowSelect,\r\n        hooks => {\r\n        hooks.visibleColumns.push(columns => [\r\n            {\r\n            id: 'selection',\r\n            Header: <div>PrintCert</div>,\r\n            Cell: ({ row }) =>(\r\n                <div>\r\n                <IndeterminateCheckbox\r\n                    {...row.getToggleRowSelectedProps()}\r\n                />\r\n                </div>\r\n            ),\r\n            },\r\n           /*  {\r\n              id: 'selection2',\r\n              Header: <div>MFC-Review/Update</div>,\r\n              Cell: ({ row }) =>(\r\n                  <div>\r\n                  <IndeterminateCheckbox\r\n                      {...row.getToggleRowSelectedProps()}\r\n                  />\r\n                  </div>\r\n              ),\r\n              }, */\r\n            ...columns,\r\n        ])\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        // console.log(\"Table_CDMList_limit2: useEffect called..\")\r\n        fetchData({ pageIndex, pageSize })\r\n      }, [pageIndex, pageSize])\r\n    \r\n    const handleRowSelected = (row, calID) => {\r\n    //console.log(\">>selectedRowID with CalID= \", calID)\r\n    row.toggleRowSelected(false)\r\n    // row.isSelected? console.log(\"not seleted\") : console.log(\">>selectedRowID with CalID= \", calID) \r\n    !row.isSelected && handlePrintCert(calID)\r\n    }\r\n\r\n    const Pagemagination = () => {\r\n      return(\r\n        <div className=\"pagination\">\r\n          <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n            {'<<'}\r\n          </button>{' '}\r\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            {'<'}\r\n          </button>{' '}\r\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n            {'>'}\r\n          </button>{' '}\r\n          <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n            {'>>'}\r\n          </button>{' '}\r\n          <span>\r\n            Page{' '}\r\n            <strong>\r\n              {pageIndex + 1} of {pageOptions.length}\r\n            </strong>{' '}\r\n          </span>\r\n          <span style={{width: \"300px\"}}>\r\n            | Go to page:{' '}\r\n            <input\r\n              type=\"number\"\r\n              defaultValue={pageIndex + 1}\r\n              onChange={e => {\r\n                const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                gotoPage(page)\r\n              }}\r\n              style={{ width: '100px' }}\r\n            />\r\n          </span>{' '}\r\n          <select\r\n            value={pageSize}\r\n            onChange={e => {\r\n              setPageSize(Number(e.target.value))\r\n            }}\r\n          >\r\n            {[20, 40, 60, 70, 90, 100].map(pageSize => (\r\n              <option key={pageSize} value={pageSize}>\r\n                Show {pageSize}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const ShowRecordNumber = () => {\r\n      return(\r\n        <tr>\r\n          {loading ? (\r\n          // Use our custom loading state to show a loading indicator\r\n          <td colSpan=\"10000\">Loading...</td>\r\n          ) : (\r\n          <td colSpan=\"10000\">\r\n              Showing {page.length} of ~{controlledPageCount * pageSize}{' '}\r\n              results\r\n          </td>\r\n          )}\r\n        </tr>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <Pagemagination />\r\n      <table {...getTableProps()}>\r\n        <ShowRecordNumber />\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n               {headerGroup.headers.map(column => (\r\n                <th\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  className={\r\n                    column.isSorted\r\n                      ? column.isSortedDesc\r\n                        ? \"sort-desc\"\r\n                        : \"sort-asc\"\r\n                      : \"\"\r\n                  }\r\n                >\r\n                  {column.render(\"Header\")}\r\n                  <div className=\"filter\">{column.canFilter? column.render('Filter'): null}</div>\r\n                </th>\r\n              ))} \r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n            {page.map((row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                <tr {...row.getRowProps()} \r\n                    className={`tr ${row.isSelected? 'selected': ''}`}\r\n                    onChange = {() => handleRowSelected(row, row.original.CalID)}\r\n                >\r\n                    {row.cells.map((cell, index) => {\r\n                    return (\r\n                        <td {...cell.getCellProps()}>\r\n                        {\r\n                            index === 1? \r\n                            <Link onClick ={() => onclick(row.original.CalID)}>\r\n                              {(cell.value) ?\r\n                                cell.render(\"Cell\") : \"Add WO\"}\r\n                            </Link>\r\n                            : cell.render(\"Cell\")\r\n                        }\r\n                        </td>\r\n                    );\r\n                    })}\r\n                </tr>\r\n                );\r\n            })}\r\n            <ShowRecordNumber />\r\n            {/* <tr>\r\n                {loading ? (\r\n                // Use our custom loading state to show a loading indicator\r\n                <td colSpan=\"10000\">Loading...</td>\r\n                ) : (\r\n                <td colSpan=\"10000\">\r\n                    Showing {page.length} of ~{controlledPageCount * pageSize}{' '}\r\n                    results\r\n                </td>\r\n                )}\r\n            </tr> */}\r\n        </tbody>\r\n      </table>\r\n      {/* \r\n        Pagination can be built however you'd like. \r\n        This is just a very basic UI implementation:\r\n      */}\r\n      <Pagemagination />\r\n      {/* <div className=\"pagination\">\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </button>{' '}\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </button>{' '}\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </button>{' '}\r\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </button>{' '}\r\n        <span>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span style={{width: \"300px\"}}>\r\n          | Go to page:{' '}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            style={{ width: '100px' }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n        >\r\n          {[20, 40, 60, 70, 90, 100].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div> */}\r\n    </>   \r\n    )\r\n}\r\n\r\nexport default Table\r\n\r\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useTable, usePagination, useFilters, useSortBy, useRowSelect } from \"react-table\";\nimport { Link, useHistory } from 'react-router-dom';\nimport MfcCalService from \"../api/MfcCalService\";\nimport MFC_Cal_Form from './MFC_CAL_Form'\nimport Table from './Tables/CDMTable'\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./Header\";\nimport usePersistedState from \"../Utils/usePersistedState\";\nimport { removeLocalCDMList } from \"../Utils/locStorage\";\nimport BackToPreviousPage from \"../Utils/BackToPreviousPage\";\n\nexport default function App (props) {\n  const [data, setData] = React.useState([])\n  const [loading, setLoading] = React.useState(false)\n  const [pageCount, setPageCount] = React.useState(0)\n  const fetchIdRef = React.useRef(0)\n  const [err, setErr] = useState(false)\n  const [content, setContent] = useState(null)\n  const pageShown = useRef(null)\n  /* const [mfccalObj, setMfccalObj] = useState({ mfccal_data: [], cal_id: null })\n  const [certreport, setCertReport] = useState({ id: null, certdata: [], reportdata: []}) */\n  const [persistedData, setPersistedData] = usePersistedState(\"cdm\", [])\n  const [pagePersist, setPagePersist] = usePersistedState(\"pages\", 0)\n  const [pageIndexPersist, setPageIndexPersist] = usePersistedState(\"pageindex\", 0)\n \n  const columns = React.useMemo(\n      ()=>[\n              {\n                  Header: 'Work Order',\n                  accessor: 'WOnum'\n              },\n              {\n                Header: 'SN',\n                accessor: 'SN'\n              }\n              ,\n              {\n                  Header: 'Cal.Date',\n                  accessor: 'CalDTG'\n              },\n              {\n                  Header: 'Operator',\n                  accessor: 'Operator'\n              },\n              {\n                  Header: 'Customer',\n                  accessor: 'Customer'\n              },\n              {\n                  Header: 'Customer Location',\n                  accessor: 'Customer Location'\n              },\n              {\n                  Header: 'DUT',\n                  accessor: 'DUT'\n              },\n              {\n                  Header: 'Gas/Range',\n                  accessor: 'GasRange'\n              },\n      ]\n  )\n  const history = useHistory()\n\n  const callMFC = (id) => {\n    //console.log(\">>clicked at id: \", id)\n    try {\n      // http.get(`/mfccal/onebyid/${id}`)\n      MfcCalService.getById(id)\n        .then((res) => {\n          const data = res.data.mfc_cal\n          // console.log(\">>>mfccal response: \", data)\n          // setMfccalObj( { mfccal_data: data, cal_id: id })\n          // console.log(\"/mfccal/detail, mfccalObj: \", mfccalObj)\n          history.push(\"/mfccal/detail\", {data: data, id: id})\n          pageShown.current = \"MFCCal\"\n        })\n        }catch (err) {\n            console.log(err)\n        }\n  }\n  \n  const printCert = async (calID) => {\n    //console.log(\">>calID passing to CDMListing = \", calID)\n    Promise.all([MfcCalService.getCertByID(calID), MfcCalService.getDataReportByID(calID)])\n    .then(\n      data =>{\n        let cert = data[0].data.data\n        let report = data[1].data.data\n      /*   console.log(\"cert: \", cert)\n        console.log(\"report: \", report) */\n        // setCertReport( { id: calID, certdata: cert, reportdata: report })\n        history.push(\"/mfccal/cert\", {id: calID, certdata: cert, reportdata: report})\n        pageShown.current = \"CertReport\"\n      }\n    )\n  }\n\n  const fetchData = React.useCallback(({ pageSize, pageIndex }) => {\n    const fetchId = ++fetchIdRef.current\n    console.log(\"fetchdata called: \", fetchId)\n    // Set the loading state\n    setLoading(true)\n    // We'll even set a delay to simulate a server here\n    setTimeout(() => {\n    // Only update the data if this is the latest fetch\n    if (fetchId === fetchIdRef.current) {\n      console.log(\"fetchID = fetchIdRef\")\n      //console.log(\"fetchdata: \", pageIndex, '-', pageSize)\n      if(persistedData.length > 0 && pageIndex === pageIndexPersist){\n        // console.log(\"persisteddata is \", persistedData)\n        setData(persistedData)\n        setPageCount(parseInt(pagePersist)) \n        // console.log(\"pagePersistINdex: \", pageIndexPersist)\n      }else{\n        console.log(\"fetchID != fetchIdRef\")\n        console.log(\"persistadata is empty, then fetching database\")\n        MfcCalService.getLimitAll({pageIndex, pageSize})\n        .then((res) => {\n            console.log(\"fetching CDM List: \", res.data.message)\n            const myDataRet = res.data.cdmList\n            setData(myDataRet)\n            setPageCount(parseInt(res.data.pages))  \n            setPersistedData(myDataRet)\n            setPagePersist(res.data.pages)\n            setPageIndexPersist(pageIndex)\n        },\n        (error) => {\n        console.log(\"error: \", error)\n          const _content =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n          setErr(true)\n          setContent(_content);\n          console.log(\"_content: \", _content)\n        }\n        )\n      }\n      setLoading(false)\n    }\n    }, 1000)\n  }, [])\n  \n  const handleRefreshing = () => {\n    console.log(\"handleREfreshing\")\n    removeLocalCDMList();\n    const pageIndex = 0;\n    const pageSize = 20;\n    MfcCalService.getLimitAll({pageIndex, pageSize})\n        .then((res) => {\n            // console.log(\"message: \", res.data.message)\n            const myDataRet = res.data.cdmList\n            setData(myDataRet)\n            setPageCount(parseInt(res.data.pages))  \n            setPersistedData(myDataRet)\n            setPagePersist(res.data.pages)\n            setPageIndexPersist(pageIndex)\n        },\n        (error) => {\n        console.log(\"error: \", error)\n          const _content =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n          setErr(true)\n          setContent(_content);\n          console.log(\"_content: \", _content)\n        }\n        )\n    //window.location.reload();\n  }\n\n  const SearchWO = () => {\n    const woRef = useRef(null)\n    const handleSearch = () => {\n      const wo = woRef.current.value\n      //console.log(\"wo#: \", wo)\n      const pageIndex=0, pageSize = 20\n      MfcCalService.getByWO({pageIndex, pageSize, wo})\n      .then((res) => {\n        // console.log(\"message: \", res.data.message)\n        const myDataRet = res.data.cdmList\n        setData(myDataRet)\n        setPageCount(parseInt(res.data.pages))  \n       /*  setPersistedData(myDataRet)\n        setPagePersist(res.data.pages)\n        setPageIndexPersist(pageIndex) */\n      },\n      (error) => {\n      console.log(\"error: \", error)\n      const _content =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      setErr(true)\n      setContent(_content);\n      console.log(\"_content: \", _content)\n      })\n    }\n    return(\n      <>\n      <Grid container xs={12} spacing=\"2\">\n        <Grid item xs={5}>\n          <button style={{height: \"28px\", marginLeft: \"5px\"}} onClick={handleRefreshing}>Refreshing Data</button>\n        </Grid>\n        <Grid item xs=\"4\">\n            <input type=\"text\" name=\"wo\" ref={woRef} placeholder=\"Search by WO\" />\n        </Grid>\n        <Grid item xs={3}>\n          <button style={{height: \"28px\"}} onClick={handleSearch}>Search</button>\n        </Grid>\n      </Grid>\n      </>\n    )\n  }\n\n  const SearchSN = () => {\n    const snRef = useRef(null)\n    const handleSearch = () => {\n      const sn = snRef.current.value\n      // const sn = form[\"sn\"].value\n      // setSNSearch(sn)\n      console.log(\"sn#: \", sn)\n      const pageIndex=0, pageSize = 20\n      MfcCalService.getBySN({pageIndex, pageSize, sn})\n      .then((res) => {\n        // console.log(\"message: \", res.data.message)\n        const myDataRet = res.data.cdmList\n        console.log(\"search return: \", myDataRet)\n        setData(myDataRet)\n        setPageCount(parseInt(res.data.pages))  \n      },\n      (error) => {\n      console.log(\"error: \", error)\n      const _content =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n      setErr(true)\n      setContent(_content);\n      console.log(\"_content: \", _content)\n      })\n    }\n    return(\n      <>\n      <Grid container xs={12} spacing=\"2\">\n        <Grid item xs=\"5\">\n          {/* <form ref={snFormRef}> */}\n          <div>\n            <input type=\"text\" name=\"sn\" ref= {snRef} placeholder=\"Search by SN\" />\n          </div>\n        </Grid>\n        <Grid item xs={3}>\n          <button style={{height: \"28px\"}} onClick={handleSearch}>Search</button>\n        </Grid>\n      </Grid>\n      </>\n    )\n  }\n\n  /* const BackToPreviousPage = () => {\n    return(\n      <>\n      <div><button style={{height: \"28px\"}} onClick={()=>window.location.reload()} >Back To Previous Page</button></div>\n      </>\n    )\n  } */\n\n  return (\n    <>\n      <Header name=\"Calibration Data Management\" />\n      <Grid item xs={12} className=\"App-tbl\">\n      { err ? (\n          <div>\n              {content}\n          </div>\n          ) : \n          (\n            <>\n              <Grid container xs={12} spacing={2} direction=\"row\" className=\"cdm-menubar\" style={{marginLeft: \"15px\", marginBottom: \"0px\", height: \"45px\"}} >\n                <Grid item xs={5}><SearchWO /></Grid>\n                <Grid item xs={4}><SearchSN /></Grid>\n                <Grid item xs={2}><BackToPreviousPage /></Grid>\n              </Grid>\n            <div>\n                <Table\n                    columns={columns}\n                    data={data}\n                    fetchData={fetchData}\n                    loading={loading}\n                    pageCount={pageCount}\n                    onclick={callMFC}\n                    handlePrintCert={printCert}\n                /> \n            </div>\n            </>\n            )\n      }\n      </Grid>\n    </>\n  )\n}\n","const  Header = (props) => {\r\n    return  <div className=\"form-header\" style={{textAlign: \"center\"}}>\r\n                <h1>{props.name}</h1>\r\n            </div>\r\n}\r\n\r\nexport default Header;"],"names":["_jsx","_Fragment","children","style","height","onClick","window","location","reload","usePersistedState","key","defaultValue","_React$useState","React","JSON","parse","localStorage","getItem","_React$useState2","_slicedToArray","state","setState","useEffect","setItem","stringify","_getCertByID","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","wrap","_context","prev","next","abrupt","http","get","concat","stop","apply","arguments","_getDataReportByID","_callee2","_context2","getAll","recordCount","getLimitAll","data","post","headers","authHeader","getById","create","update","put","remove","delete","removeAll","findByName","name","getCertByID","_x","getDataReportByID","_x2","getAllEquipCal","updateEquipCal","loadCert","responseType","getByWO","getBySN","console","log","user","accessToken","axios","baseURL","process","_ref","columns","fetchData","loading","controlledPageCount","pageCount","onclick","handlePrintCert","defaultColumn","Filter","TextFilter","_ref2","_ref2$column","column","filterValue","preFilteredRows","setFilter","count","length","value","onChange","e","target","undefined","placeholder","IndeterminateCheckbox","_ref3","ref","indeterminate","rest","_objectWithoutProperties","_excluded","defaultRef","resolvedRef","current","_objectSpread","type","_useTable","useTable","initialState","pageIndex","pageSize","manualPagination","autoResetFilter","autoResetPage","useFilters","useSortBy","usePagination","useRowSelect","hooks","visibleColumns","push","Header","Cell","_ref4","row","getToggleRowSelectedProps","_toConsumableArray","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","gotoPage","nextPage","previousPage","setPageSize","_useTable$state","Pagemagination","_jsxs","className","disabled","width","Number","map","ShowRecordNumber","colSpan","headerGroup","getHeaderGroupProps","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","canFilter","i","getRowProps","isSelected","calID","toggleRowSelected","handleRowSelected","original","CalID","cells","cell","index","getCellProps","Link","App","props","setData","_React$useState3","_React$useState4","setLoading","_React$useState5","_React$useState6","setPageCount","fetchIdRef","_useState","useState","_useState2","err","setErr","_useState3","_useState4","content","setContent","pageShown","useRef","_usePersistedState","_usePersistedState2","persistedData","setPersistedData","_usePersistedState3","_usePersistedState4","pagePersist","setPagePersist","_usePersistedState5","_usePersistedState6","pageIndexPersist","setPageIndexPersist","accessor","history","useHistory","printCert","Promise","all","MfcCalService","then","cert","report","certdata","reportdata","fetchId","setTimeout","parseInt","res","message","myDataRet","cdmList","pages","error","_content","response","toString","handleRefreshing","removeLocalCDMList","SearchWO","woRef","Grid","container","xs","spacing","item","marginLeft","wo","SearchSN","snRef","sn","direction","marginBottom","BackToPreviousPage","Table","mfc_cal","textAlign"],"sourceRoot":""}