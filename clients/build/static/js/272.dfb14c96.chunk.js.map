{"version":3,"file":"static/js/272.dfb14c96.chunk.js","mappings":"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","sources":["Utils/SimpleTable.js","api/http-common.js","components/DisplayCharts.js","components/Report_Form.js","components/CertReport.js","components/Tbl_template_header.js","components/DataInfo.js","components/Cert_Form.js","components/PrintPage.js","components/Tbl_template_noheader.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nexport default function App(props) {\r\n    // const classes = useStyles();\r\n    const data = props.rows\r\n    const columns = props.columns\r\n\r\n const {\r\n   getTableProps,\r\n   getTableBodyProps,\r\n   headerGroups,\r\n   rows,\r\n   prepareRow,\r\n } = useTable({ columns, data })\r\n\r\n return (\r\n     <>\r\n       <table {...getTableProps()} className = \"simple-table\" size=\"small\">\r\n         <thead>\r\n         {headerGroups.map(headerGroup => (\r\n             <tr {...headerGroup.getHeaderGroupProps()}>\r\n               {headerGroup.headers.map(column => (\r\n                   <th {...column.getHeaderProps()} >\r\n                     {column.render('Header')}\r\n                   </th>\r\n               ))}\r\n             </tr>\r\n         ))}\r\n         </thead>\r\n         <tbody {...getTableBodyProps()}>\r\n         {rows.map(row => {\r\n           prepareRow(row)\r\n           return (\r\n               <tr {...row.getRowProps()}>\r\n                 {row.cells.map(cell => {\r\n                   return (\r\n                       <td {...cell.getCellProps()} >\r\n                         {cell.render('Cell')}\r\n                       </td>\r\n                   )\r\n                 })}\r\n               </tr>\r\n           )\r\n         })}\r\n         </tbody>\r\n       </table>\r\n     </>\r\n );\r\n}\r\n\r\n","import axios from 'axios'\r\nexport default axios.create({\r\n    baseURL: process.env.REACT_APP_BASE_URL\r\n})\r\n\r\n// console.log(\"env: \", process.env)\r\nconsole.log(\"env: \", process.env.REACT_APP_BASE_URL)\r\n\r\n","import { blue, blueGrey, green, yellow } from \"@material-ui/core/colors\";\r\nimport React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nexport default function App(props) {\r\n    const xLabels = props.xLabels\r\n    const dataFSErr = props.yData\r\n    \r\n    const hiLimit = props.yHiLim\r\n    const lowLimit = props.yLoLim\r\n    console.log(\"hiLmit: \", hiLimit)\r\n    const len = hiLimit.length\r\n    const maxValue = hiLimit[len - 1]\r\n    const minValue = (-1.0) * maxValue\r\n    console.log(\"lengh: \", maxValue)\r\n    console.log(\"xLabels & data: \", xLabels, ' ', dataFSErr)\r\n    const data = {\r\n        labels: xLabels,\r\n        datasets: [\r\n            {\r\n              label: \"%FS Error\",\r\n              data: dataFSErr,\r\n              fill: false,\r\n              borderColor:\"#742774\" /*\"rgba(75,192,192,1)\"*/\r\n            },\r\n            {\r\n              label: \"Limit High\",\r\n              data: hiLimit,\r\n              fill: false,\r\n              borderColor:  'rgba(220,180,0,1)', /*\"rgba(75,192,192,1)\" */\r\n              borderDash: [2,2]\r\n            },\r\n            {\r\n              label: \"Limit Low\",\r\n              data: lowLimit,\r\n              fill: false,\r\n              borderColor: 'rgba(220,180,0,1)', /*\"rgba(220,220,220,1)\", */\r\n              borderDash: [2,2]\r\n            },\r\n        ]\r\n    }\r\n    \r\n    const options = {\r\n      title: {\r\n        display: true,\r\n        text: \"Chart Title\"\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          { \r\n            ticks: {\r\n              beginAtZero: false,\r\n              min: minValue,\r\n              max: maxValue,\r\n              stepSize: 0.0001\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      plugins: {\r\n          legend: {\r\n          display: true,\r\n          position: \"right\"\r\n          }\r\n      },\r\n      maintainAspectRatio: false\r\n    }\r\n    return (\r\n        // <div className=\"chart\" style={{ width: '800px', height: '295px' }} >\r\n        <div className=\"chart\" style={{ width: '800px', height: '270px' }} >\r\n           <Line data={data} options={options} />\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect, useRef } from 'react'\r\nimport {Grid, OutlinedInput} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table_noheader from './Tbl_template_noheader'\r\nimport logo from '../views/logo.png'\r\nimport SimpleTable from '../Utils/SimpleTable'\r\nimport DisplayChart from './DisplayCharts'\r\nimport PrintPage from './PrintPage';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 50,\r\n    },\r\n  });\r\n\r\nconst getColumns = (data) => {\r\nconst columns = [];\r\nconst sample = data[0];\r\nObject.keys(sample).forEach(key => {\r\nif (key !== \"_id\") {\r\n    columns.push({\r\n    accessor: key,\r\n    Header: key\r\n    });\r\n}\r\n});\r\nreturn columns;\r\n}\r\n  \r\nexport default function App(props) {\r\n    const divPrint = useRef(null)\r\n    //const certData = props.value\r\n    /* console.log(\">>propsval: \")\r\n    console.log(props.value) */\r\n    // console.log(\"reportform-passed props: \", props)\r\n    const data = props.value\r\n    const reportData = props.reportData\r\n   /*  console.log(\"in reportForm, props.value: \", data)\r\n    console.log(\"in ReportForm, reportData: \", reportData) */\r\n    const asFoundLeft = data[\"As F/L\"]\r\n\r\n    let columns = []\r\n    if(reportData){\r\n        columns = getColumns(reportData)\r\n    }\r\n  \r\n    const opdate_rows = [\r\n        { \"Date\" : data.CalDate},\r\n        { \"Operator\" : data.TechName}\r\n    ]\r\n     \r\n    let dutAddr = data.Address\r\n    let ficName = null\r\n    if(dutAddr > 19) {\r\n        ficName = 'FIC-${dutAddr}-19'\r\n    }else ficName = 'FIC-None'\r\n\r\n    const dut_rows = [\r\n        { \"Manufacturer\" : data.DUTmfr },\r\n        { \"Model\" : data.DUTmodel },\r\n        { \"SN\" : data.DUTsn },\r\n        { \"Flow Range\" : data.DUTFlowRange },\r\n        { \"Output Range\" : data.DUTOutputRange },\r\n        { \"Tolerance\" : data.DUTtolerance },\r\n        { \"Process Gas\" : data.DUTProcGas },\r\n        { \"K-Factor\" : data[\"K-Factor\"] },\r\n        { ficName : data.Address},\r\n    ]\r\n\r\n    const ref_rows = [\r\n        { \"Manufacturer\" : data.DigMeterMfr },\r\n        { \"Model\" : data.DigMeterModel },\r\n        { \"SN\" : data.DigMeterSN },\r\n        { \"Range\" : data.BlocRange },\r\n        { \"Reference 2 SN\" : data.BlocSN },\r\n        { \"Supply Pressure\" : data.SuppPress },\r\n        { \"Test Gas\" : data.TestGas },\r\n        { \"Customer\" : data.CustomerName } \r\n       \r\n    ]\r\n\r\n    const refFlow = reportData.map( (row) => {\r\n        return row[\"Ref Flow\"]\r\n    })\r\n\r\n    const fsErr = reportData.map( (row) => {\r\n       return row[\"Error (%fs)\"]\r\n    })\r\n   \r\n    let flowRangeStr, toleranceStr = \"\"\r\n    flowRangeStr = data.DUTFlowRange\r\n    toleranceStr = data.DUTtolerance\r\n    \r\n    let flowRangeArr = flowRangeStr.split(' ')\r\n    let toleranceArr = toleranceStr.split(' ')\r\n    console.log(`dutFlowrange: ${data.DUTFlowRange} - flowRangeArr is ${flowRangeArr}`)\r\n    // console.log(\"flowArr TolArr: \", flowRangeArr, ' ', toleranceArr)\r\n    let fullScale = flowRangeArr.length < 3 ? flowRangeArr[0] : flowRangeArr[2]\r\n    // const fullScale = flowRangeArr[2]\r\n    const offSet = toleranceArr[0]\r\n    const scaleFactor = toleranceArr[3]\r\n    const hiLim = refFlow.map( x => (x * scaleFactor / fullScale + parseFloat(offSet)).toFixed(5) )\r\n    const hiData = refFlow.map( x =>  {\r\n        let y = x * scaleFactor / fullScale\r\n        y = y + parseFloat(offSet)\r\n        return y\r\n    })\r\n    const loLim = hiLim.map( x =>  x * (-1.0))\r\n    const Header = `Report Of Calibration - ${asFoundLeft}`\r\n    console.log(`scalefactor: ${scaleFactor} - fullscale: ${fullScale}-reflow: ${refFlow}`)\r\n    return (\r\n        <>\r\n            <Grid container xs=\"12\">\r\n                <Grid container xs=\"12\" className=\"form-main\" spacing={0} direction=\"row\" justify=\"left\" alignItems=\"stretch\" style={{paddingLeft: \"0px\"}}>\r\n                    <Grid ref={divPrint} item xs={12} className=\"form-container cert\" id=\"report-form\" style={{ fontSize: \"12px\" }}>\r\n                        <Grid container xs=\"12\" spacing={0} direction=\"row\" justify=\"left\" alignItems=\"stretch\">\r\n                            <Grid item xs={8} className=\"form-control cert-top\" >\r\n                                <img src={logo} alt=\"Company logo\" />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container xs=\"12\" spacing={0} direction=\"row\" justify=\"center\" alignItems=\"stretch\" style={{marginTop: \"5px\"}}>\r\n                            <Grid item xs={8}  className=\"form-control cert-header report\" >    \r\n                                <h2>{Header}</h2>\r\n                                {/* <h2>Report Of Calibration - AS LEFT</h2> */}\r\n                            </Grid>\r\n                            <Grid item xs={4}  className=\"form-control\"> \r\n                                <Grid container spacing={0} className=\"grid-line\">\r\n                                    <Table_noheader rows={opdate_rows} />\r\n                                </Grid>  \r\n                            </Grid>\r\n                        </Grid> \r\n                        <Grid container xs=\"12\" spacing={0} direction=\"row\" justify=\"center\" alignItems=\"stretch\">\r\n                            <Grid item xs={6} className=\"cert-label\" >DUT</Grid><Grid xs={6} className=\"cert-label\" >Reference</Grid>\r\n                            <Grid item xs={6}  className=\"form-control\" > \r\n                                <Grid container xs=\"12\" className=\"grid-line\" >\r\n                                    <Table_noheader rows= {dut_rows} />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}  className=\"form-control\"> \r\n                                <Grid container xs=\"12\" className=\"grid-line\">\r\n                                    <Table_noheader rows = {ref_rows} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} className=\"cert-label standard\">Calibration Data</Grid>\r\n                        <Grid container xs=\"12\" className=\"grid-line\" >\r\n                            <SimpleTable rows= {reportData} columns={columns} />\r\n                        </Grid>\r\n                        <Grid item xs={12} className=\"cert-label standard\">%FS Error vs. Reference Flow</Grid>\r\n                        <Grid container xs=\"12\" className=\"grid-line\" >\r\n                            < DisplayChart xLabels={refFlow} yData={fsErr} yHiLim={hiLim} yLoLim={loLim} />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} style={{marginTop: \"20px\"}}>\r\n                        <PrintPage pageName=\"PRINT REPORT\" divRef = {divPrint} />\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useRef } from 'react'\r\n// import '../Form.css'\r\nimport {Grid} from '@material-ui/core'\r\nimport Report_Form from './Report_Form'\r\nimport Cert_Form from './Cert_Form'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function App(props) {\r\n    /* const data =props.certreport.certdata\r\n    const id = props.certreport.id\r\n    const reportData = props.certreport.reportdata */\r\n    const location = useLocation()\r\n    // console.log(\"CertReport: location.state: \", location.state)\r\n    const data = location.state.certdata\r\n    const id = location.state.id\r\n    const reportData = location.state.reportdata\r\n   /*  console.log(\">>CertReport_Form, props.id: \", id)\r\n    console.log(\">>CertRerpot_Form, props.vlaue: \", data)\r\n */\r\n    return (\r\n        <>\r\n            <Grid container xs=\"10\" className=\"form-main\" spacing={0} direction=\"row\" justify=\"left\" alignItems=\"stretch\">\r\n                {/* Component \"Cert_Form\" */}\r\n                <Grid item xs={5} className=\"form-control\" id=\"cert-form\">\r\n                    <Cert_Form id={id} value={data} />\r\n                </Grid>\r\n                {/* display REPORT FORM  */}\r\n                <Grid item xs={5} className=\"form-control report\" justify-self=\"left\" >\r\n                    <Report_Form value = {data} reportData = {reportData} />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 50,\r\n  },\r\n});\r\n\r\n\r\nexport default function App(props) {\r\n    const classes = useStyles();\r\n    const rows = props.rows\r\n    console.log(\"rows in table: \", rows)\r\n\r\n    if (!rows) {\r\n      console.log(\"tble_header, rows is null\")\r\n      return <div>No Data Display</div>\r\n    }\r\n    else{\r\n     /*  rows.map((row) =>{\r\n        Object.values(row).map((each) =>{\r\n          each.map((data) => (\r\n          console.log(\"value: \", data)\r\n          )\r\n        )})\r\n      }); */\r\n     \r\n      return (\r\n        <TableContainer component={Paper}>\r\n        <Table className={classes.table} size=\"small\" >\r\n            <TableHead>\r\n              <TableRow>\r\n                  <TableCell align=\"center\">Mfgr</TableCell>\r\n                  <TableCell align=\"center\">Model</TableCell>\r\n                  <TableCell align=\"center\">SN</TableCell>\r\n                  <TableCell align=\"center\">Description</TableCell>\r\n                  <TableCell align=\"center\">Last Cal</TableCell>\r\n                  <TableCell align=\"center\">Cal Due</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {rows.map((row, id) => (\r\n                <TableRow key = {id}>\r\n                  { \r\n                    Object.values(row).map((each) =>(\r\n                      each.map((cell) => ( <TableCell align = \"center\">{cell}</TableCell> )\r\n                    )))\r\n                  }\r\n                </TableRow>\r\n            ))}\r\n            </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n    );\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport const Info = {\r\n    Shanghai_address:  [\r\n        \"Shanghai Thermo Fisher Calibration Lab\",\r\n        <br/>,\r\n        \"1234 Xingxu Court\",\r\n        <br/>,\r\n        \"Shanghai, China 9999\"\r\n    ],\r\n\r\n    SantaClara_address:  [\r\n        \"Thermo Fisher Calibration Lab\",\r\n        <br/>,\r\n        \"3401 Leonard Court\",\r\n        <br/>,\r\n        \"Santa Clara, CA 95054\"\r\n    ],\r\n\r\n    iso: \r\n    [`For service performed and calibration data, refer to the As Found Cabliration Report, and if needed\r\n    the As Left Calibration Report, auto-generated by the referecne standard system.`,\r\n    <br/>,\r\n    <br/>,\r\n    `Thermo Scientific follows current Good Manufacturing Practices and ISO 17025 procedures. Complete calibration and repair records are\r\n    maintained at our service facility and are available for inspection.\r\n    Unless otherwise specified, all stanadards are traceable to the National Institue of Standards and Technology (NIST).\r\n    `,\r\n    <br/>,\r\n    <br/>,\r\n    `The following calibration standards were used during this calibration:`\r\n    ],\r\n    docNo: `Doc#: F910-2908-001 Rev 4`\r\n}","import React, { useState, useEffect, useRef } from 'react'\r\nimport  { set, useForm } from 'react-hook-form'\r\n// import '../Form.css'\r\nimport {Grid} from '@material-ui/core'\r\nimport http from '../api/http-common'\r\nimport Table_noheader from './Tbl_template_noheader'\r\nimport Table_header from './Tbl_template_header'\r\nimport logo from '../views/logo.png'\r\nimport { Info } from './DataInfo'\r\nimport html2pdf from 'jspdf-html2canvas'\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles'\r\n\r\n// import ReactToPrint from 'react-to-print'\r\nimport PrintPage from './PrintPage'\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n        fontSize: 12,\r\n    }\r\n    \r\n})\r\n\r\nexport default function App(props) {\r\n    const data = props.value\r\n    const id = props.id\r\n    const { register, handleSubmit, formState: { errors }, reset } = useForm()\r\n    const [ certId_rows , setCertId_rows ] = useState()\r\n    const [ customer_rows, setCustomer_rows ] = useState()\r\n    const [ devId_rows, setDevId_rows ] = useState()\r\n    const [ calStdUsed_rows, setCalStdUsed_rows ] = useState()\r\n    const [ op, setOp ] = useState(\"\")\r\n    const [ opSign, setOpSign ] = useState(null)\r\n    const [ opSignDate, setOpSignDate ] = useState(\"\")\r\n    const [ opBttShowed, setOpBttShowed ] = useState(true)\r\n    const [ qa, setQA ] = useState(\"\")\r\n    const [ qaSign, setQaSign ] = useState(null)\r\n    const [ qaSignDate, setQaSignDate ] = useState(\"\")\r\n    const [ qaBttShowed, setQaBttShowed ] = useState(true)\r\n    const [ certData, setCertData ] = useState()\r\n    const DATE_OPTION = { year: 'numeric', month: 'short', day: 'numeric'}\r\n    const [calID, setCalID] = useState()\r\n    const [comments, setComments] = useState(\"\")\r\n\r\n    \r\n    const divPrint = useRef(null)\r\n\r\n    useEffect(()=>{\r\n      /*   console.log(\"effect..in Cert_form, data : \")\r\n        console.log(data) */\r\n        // setCertData(props.value)\r\n        setCertData(data)\r\n        setCalID(id)\r\n        setCertId_rows(\r\n            [\r\n                { \"Cert Number\" : data.CertNum},\r\n                { \"Date of Calibration\" : data.CalDate},\r\n                { \"Next Due Calibration\" : data.NextCal}\r\n            ]\r\n        )    \r\n        setCustomer_rows(\r\n            [\r\n                { \"Name\" : data.CustomerName },\r\n                { \"Address\" : data.Address1},\r\n                { \"City,State\" : data.Address2},\r\n                { \"Country\" : data.Address3}\r\n            ]\r\n        )\r\n        setDevId_rows([\r\n            { \"Manufacturer\" : data[\"DUT Mfr\"]},\r\n            { \"Model\" : data[\"DUT model\"]},\r\n            { \"Description\" : data[\"DUT Descr\"]},\r\n            { \"Serial Number\" : data[\"DUT SN\"]},\r\n            { \"Gas\" : data[\"DUTProcGas\"]},\r\n            { \"Max Flow Rate\" : data[\"DUTMaxFlow\"]}\r\n        ])\r\n        setCalStdUsed_rows([\r\n            { \"DigMeter\" : [ data[\"DigMeterMfr\"], data[\"DigMeterModel\"], data[\"DigMeterSN\"],\r\n                data[\"DigMeterDescr\"], data[\"DigMeterLastCal\"], data[\"DigMeterDueCal\"] ],\r\n            },\r\n            { \"Bloc\" : [ data[\"BlocFMMfr\"], data[\"BlocFMModel\"], data[\"BlocFMSN\"], \r\n                data[\"BlocFMDescr\"], data[\"BlocFMLastCal\"], data[\"BlocFMDueCal\"]]\r\n            }\r\n        ])\r\n        // console.log(\"data: \", data)\r\n        setComments(data.Remarks)\r\n\r\n        // signature of Technician and QA\r\n        let techImgURL, qaImgURL = null\r\n        //console.log(\"data[techSig]: \", data[\"TechSig\"])\r\n        \r\n        if (data[\"TechSig\"]) {\r\n            techImgURL = convertBlobtoImg(data[\"TechSig\"])\r\n            //console.log(\">>techImgURL: \", techImgURL)\r\n        }\r\n        if (data[\"QAsig\"]) {\r\n            qaImgURL = convertBlobtoImg(data[\"QAsig\"])\r\n        }\r\n        \r\n        setOp(data[\"TechName\"])\r\n        // setOpSign(data[\"TechSig\"])\r\n        \r\n        setOpSignDate(data[\"TechDate\"])\r\n\r\n        if (data[\"TechDate\"]) {\r\n            // setOpSign(techImgURL)\r\n            setOpSign(convertBlobtoImg(data[\"TechSig\"]))\r\n            setOpBttShowed(false)\r\n        }else setOpSign(null)\r\n\r\n        //console.log(\"QASign: \", data[\"QAsig\"])\r\n        \r\n        if (data[\"QAdate\"]){\r\n            setQaSign(convertBlobtoImg(data[\"QAsig\"]))\r\n            setQaBttShowed(false)\r\n        }\r\n\r\n        setQA(data[\"QAName\"])\r\n        // setQaSign(qaImgURL)\r\n        setQaSignDate(data[\"QAdate\"])\r\n        reset(data) \r\n    },[data])\r\n    \r\n    const convertBlobtoImg = (blob) => {\r\n       /*  const base64String = btoa(String.fromCharCode.apply(null,blob.data))\r\n        const imgBlob = `data:image/jpeg;base64,${base64String}`\r\n        return imgBlob */\r\n        const myBlob = new Uint8Array(blob.data)\r\n        const imgBlob = new Blob([myBlob], {type: 'image/jpeg'}) \r\n        const urlCreator = window.URL || window.webkitURL\r\n        const imgURL =urlCreator.createObjectURL(imgBlob)\r\n        setTimeout(() => {\r\n            URL.revokeObjectURL(imgBlob)\r\n        }, 100);\r\n        // URL.revokeObjectURL(imgBlob)\r\n        return imgURL\r\n    }\r\n\r\n    console.log(\">>>errors: \", errors)\r\n\r\n    /* const refreshPage = () => {\r\n        window.location.reload(false)\r\n    } */\r\n\r\n    const handleClick = () => {\r\n        // console.log(\"button Back to CDMListing clicked!\")\r\n        // window.location.reload()\r\n        window.history.go(-1)\r\n    }\r\n\r\n    function createData(name, value) {\r\n        return { name, value };\r\n      }\r\n    \r\n    function createCalStdUsed(mfgr, model, sn, desc, lastCal, dueCal) {\r\n        return { mfgr, model, sn, desc, lastCal, dueCal }\r\n      }\r\n\r\n    const handleOnChange = (e) => {\r\n        //console.log(\"text changed: \", e.target.value)\r\n        setComments(e.target.value)\r\n    }\r\n\r\n    const tech_signOff = () => {\r\n        http.put(`/mfccal/cert/create/${calID}`, {data: comments})\r\n        .then((res) => {\r\n            // console.log(\"in response back ..\", res)\r\n            let data = res.data.data[0]\r\n            const newCertNum = data[\"newCertNum\"]\r\n            //console.log(\"sign off>>data from backend:  \", data)\r\n            setOpSignDate(data.SignDate)\r\n            let v = certId_rows;\r\n            v[0][\"cert number\"] = newCertNum;\r\n            setCertId_rows(v)\r\n            setOp(data[\"CalName\"])\r\n            setOpSign(convertBlobtoImg(data[\"Signature\"]))\r\n            // setOpSign(data[\"Signature\"])\r\n            setOpBttShowed(false)\r\n            //console.log(`signoff is ${opSign}`)\r\n            //console.log(`signDate is ${opSignDate}`)\r\n        })\r\n    }\r\n\r\n    const QA_signOff = () => {\r\n        alert(\"QA Needs to Sign Off at the Final Step by Truflow eTraveler\")\r\n        /* console.log(\">>qa sign off..\")\r\n        setQA(\"Henry\")\r\n        setQaSign(signed)\r\n        setQaSignDate(getCurrentDate)\r\n        setQaBttShowed(!qaBttShowed) */\r\n    }\r\n\r\n    const getCurrentDate = () =>{\r\n            let today = new Date();\r\n            return today.toLocaleString('en-US', DATE_OPTION)\r\n            //return ((today.get + 1) + \"-\" + today.getDate() + \"-\" + today.getFullYear())\r\n            // return new Date().toLocaleString()\r\n    }\r\n   \r\n    const printPDF = (name) => {\r\n        //console.log(\">>printing pdf...!\")\r\n        const page = document.getElementById(name);\r\n        html2pdf(page, {\r\n            jsPDF: {\r\n                format: 'A4',\r\n                unit: 'in',\r\n            },\r\n            imageType: 'image/jpeg',\r\n            output: './pdf/generate.pdf',\r\n            imageQuality: 0.98,\r\n            margin: { left: 0.2, right: 0.2, top: 0.4 },\r\n            position: 0,\r\n            html2canvas: { \r\n                scrollX: 0,\r\n                scrollY: -window.scrollY + 3,\r\n                scale: 4, \r\n                loggin: true,\r\n                width: 838,\r\n                height: 1130,\r\n                useCORS: true\r\n            },\r\n        })\r\n    }\r\n\r\n    const TechSignDIV = () => {\r\n        return(\r\n            <>\r\n                <Grid item xs={3}>  \r\n                    {/* <input type=\"submit\" onClick={tech_signOff} value=\"Tech. Sign Off\"/>  */}\r\n                    <input type=\"submit\" className= \"form-control sign-bttn\" onClick={tech_signOff} value=\"Tech.Sign\"/>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const QASignDIV = () => {\r\n        return(\r\n            <>\r\n                <Grid item xs={3}  >  \r\n                    <input type=\"submit\" className= \"form-control sign-bttn\" onClick={QA_signOff} value=\"QA.Sign\"/>\r\n                </Grid>\r\n            </>\r\n        )\r\n    }\r\n\r\n /*    const PrintPage = (props) => {\r\n        const divPrint = props.divRef\r\n        const pageName = props.pageName\r\n        const pageStyle = `{ size: 2.5in 4in }`;\r\n        return (\r\n            <div>\r\n                <ReactToPrint\r\n                    pageStyle={pageStyle}\r\n                    trigger={() => <button style={{height: \"28px\"}}>{pageName}!</button>}\r\n                    content={() => divPrint.current}\r\n                />\r\n            </div>\r\n        );\r\n    } */\r\n\r\n    return (\r\n        <>  \r\n             <MuiThemeProvider theme={theme}>\r\n\r\n                <Grid container xs=\"12\" className=\"form-main\" spacing={0} direction=\"row\" justify=\"left\" alignItems=\"stretch\">\r\n                    <Grid ref={divPrint} item xs={12} className=\"form-container cert\" id=\"cert-form\" style={{ fontSize: \"0.705em\" }} >\r\n                        <Grid container xs=\"12\" spacing={0} direction=\"row\" justify=\"left\" alignItems=\"stretch\">\r\n                            <Grid item xs={8} className=\"form-control cert-top\">\r\n                                <img src={logo} alt=\"Company logo\" />\r\n                            </Grid>\r\n                            <Grid item xs={4} className=\"form-control cert-addr\">\r\n                                <p>\r\n                                    {Info[\"SantaClara_address\"]}\r\n                                </p>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container xs=\"12\" spacing={0} direction=\"row\" justify=\"center\" alignItems=\"stretch\" style={{marginTop: \"5px\"}}>\r\n                            <Grid item xs={8}  className=\"form-control cert-header\" >    \r\n                                <h2>Certificate Of Calibration</h2>\r\n                            </Grid>\r\n                            <Grid item xs={4}  className=\"form-control\"> \r\n                                <Grid container spacing={0} className=\"grid-line\">\r\n                                    <Table_noheader rows={certId_rows} />\r\n                                </Grid>  \r\n                            </Grid>\r\n                        </Grid> \r\n                        <Grid container xs=\"12\" spacing={0} direction=\"row\" justify=\"center\" alignItems=\"stretch\">\r\n                            <Grid item xs={5} className=\"cert-label\" >Customer</Grid><Grid xs={7} className=\"cert-label\" >Device Identity</Grid>\r\n                            <Grid item xs={5}  className=\"form-control\" > \r\n                                <Grid container xs=\"12\" className=\"grid-line\" >\r\n                                    <Table_noheader rows= {customer_rows} />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={7}  className=\"form-control\"> \r\n                                <Grid container xs=\"12\" className=\"grid-line\">\r\n                                    <Table_noheader rows = {devId_rows} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container xs=\"12\" spacing={0} direction=\"row\" justify=\"flex-start\" >\r\n                            <Grid item xs={12} className=\"form-control iso\">\r\n                                {Info.iso}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} className=\"cert-label standard\">Calibration Standard Used</Grid>\r\n                        <Grid container xs=\"12\" className=\"grid-line\" >\r\n                            <Table_header rows= {calStdUsed_rows} />\r\n                        </Grid>\r\n                        <Grid container xs=\"12\" spacing={0}>\r\n                            <Grid item xs={12} className=\"cert-label\">Remarks</Grid>\r\n                            <Grid item xs={12} className=\"form-control grid-line comments\">\r\n                                <textarea className=\"comments\" value={comments} onChange={handleOnChange} />\r\n                                {/* <input type=\"text\" className=\"comments\" onChange={handleOnChange} /> */}\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container xs=\"12\" spacing={0} direction=\"row\" className=\"cert-sign\">\r\n                            <Grid item xs={3} className=\"form-control sign\">\r\n                                <label>Performed By</label>\r\n                                <p>{op}</p>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"form-control img\">\r\n                                {/* <img src={opSign}></img> */}\r\n                                { opBttShowed ? <TechSignDIV /> : <img src={opSign}></img>}\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"form-control sign\">\r\n                                <label>Date:</label>\r\n                                <p>{opSignDate}</p>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container xs=\"12\" spacing={0} direction=\"row\" className=\"cert-sign\">\r\n                            <Grid item xs={3} className=\"form-control sign\">\r\n                                <label>Inspected By</label>\r\n                                <p>{qa}</p>\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"form-control img\">\r\n                                { qaBttShowed ? <QASignDIV /> : <img src={qaSign}></img> }\r\n                            </Grid>\r\n                            <Grid item xs={3} className=\"form-control sign\">\r\n                                <label>Date:</label>\r\n                                <p>{qaSignDate}</p>\r\n                            </Grid>\r\n                            \r\n                        </Grid>\r\n                        <Grid item xs={3} className=\"form-control docno\" justify=\"left\">\r\n                            {Info.docNo}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={8} className=\"button\">\r\n                        <Grid container xs=\"12\" className=\"control-button\" style={{marginTop: \"12px\"}}>\r\n                            <Grid item xs={2} className=\"form-control cert-action\">\r\n                                <input type=\"submit\" onClick={() => printPDF(\"cert-form\")} value=\"DownLoad Certificate\"/>\r\n                            </Grid>\r\n                            <Grid item xs={2} className=\"form-control cert-action\">\r\n                                <input type=\"submit\" onClick={() => printPDF(\"report-form\")} value=\"DownLoad Report\"/>\r\n                            </Grid>\r\n                            <Grid item xs={2} className=\"form-control cert-action\">\r\n                                <input type=\"submit\" onClick={() => handleClick()} value=\"Back To Previous Page\" />\r\n                            </Grid>\r\n                            <Grid item xs={2} className=\"form-control cert-action\">\r\n                                <PrintPage pageName=\"PRINT CERT\" divRef = {divPrint} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>  \r\n                </Grid>\r\n            </MuiThemeProvider>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { red } from \"@material-ui/core/colors\";\r\nimport React from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\n\r\nconst PrintPage = (props) => {\r\n    const divPrint = props.divRef\r\n    const pageName = props.pageName\r\n    const pageStyle =\r\n    `\r\n    @page {\r\n        { size: A4 landscape; };\r\n    }\r\n  \r\n    @media all {\r\n      .pagebreak {\r\n        display: none;\r\n      }\r\n    }\r\n  \r\n    @media print {\r\n      .pagebreak {\r\n        page-break-before: always;\r\n      }\r\n    }\r\n  `;\r\n    // const pageStyle = `@media print { @page {\\ size: 'A4 landscape';\\ }}`;\r\n    // const pageStyle = `{ size: 2.5in 4in }`;\r\n    return (\r\n        <div>\r\n            <ReactToPrint\r\n                pageStyle={pageStyle}\r\n                trigger={() => <button style={{height: \"35px\", backgroundColor: \"green\"}}>{pageName}!</button>}\r\n                content={() => divPrint.current}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PrintPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 50,\r\n    // fontSize: 15,\r\n  },\r\n  tableRow: {\r\n    // height: 25,\r\n    paddingTop: 3,\r\n    paddingBottom: 3,\r\n  }\r\n});\r\n\r\nexport default function App(props) {\r\n    const classes = useStyles();\r\n    const rows = props.rows\r\n    console.log(\">>rows passed: \", rows)\r\n    if (!rows) {\r\n      // console.log(\"TblnTemplate_noheader: rows is null\")\r\n      return <div>No Data Display</div>\r\n    }\r\n    else{\r\n      return (\r\n        <TableContainer component={Paper}>\r\n        <Table className={classes.table} size=\"small\" >\r\n            <TableBody>\r\n            {rows.map((row) => (\r\n                // <TableRow key={row.name}>\r\n                <TableRow className={classes.tableRow} key={Object.keys(row)} >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {Object.keys(row)}\r\n                </TableCell> \r\n                <TableCell align=\"left\">{Object.values(row)}</TableCell>\r\n                </TableRow>\r\n            ))}\r\n            </TableBody>\r\n        </Table>\r\n        </TableContainer>\r\n    );\r\n  }\r\n}\r\n"],"names":["App","props","data","rows","columns","_useTable","useTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","_jsx","_Fragment","children","_jsxs","_objectSpread","className","size","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","axios","create","baseURL","process","console","log","xLabels","dataFSErr","yData","hiLimit","yHiLim","lowLimit","yLoLim","maxValue","length","minValue","labels","datasets","label","fill","borderColor","borderDash","options","title","display","text","scales","yAxes","ticks","beginAtZero","min","max","stepSize","plugins","legend","position","maintainAspectRatio","style","width","height","Line","getColumns","makeStyles","table","minWidth","sample","Object","keys","forEach","key","push","accessor","Header","divPrint","useRef","value","reportData","asFoundLeft","opdate_rows","CalDate","TechName","Address","flowRangeStr","dut_rows","DUTmfr","DUTmodel","DUTsn","DUTFlowRange","DUTOutputRange","DUTtolerance","DUTProcGas","ficName","ref_rows","DigMeterMfr","DigMeterModel","DigMeterSN","BlocRange","BlocSN","SuppPress","TestGas","CustomerName","refFlow","fsErr","toleranceStr","flowRangeArr","split","toleranceArr","concat","fullScale","offSet","scaleFactor","hiLim","x","parseFloat","toFixed","loLim","y","Grid","container","xs","spacing","direction","justify","alignItems","paddingLeft","ref","item","id","fontSize","src","logo","alt","marginTop","Table_noheader","SimpleTable","DisplayChart","PrintPage","pageName","divRef","location","useLocation","state","certdata","reportdata","Cert_Form","Report_Form","useStyles","classes","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","values","each","Info","Shanghai_address","SantaClara_address","iso","docNo","theme","createMuiTheme","typography","_useForm","useForm","errors","register","handleSubmit","formState","reset","_useState","useState","_useState2","_slicedToArray","certId_rows","setCertId_rows","_useState3","_useState4","customer_rows","setCustomer_rows","_useState5","_useState6","devId_rows","setDevId_rows","_useState7","_useState8","calStdUsed_rows","setCalStdUsed_rows","_useState9","_useState10","op","setOp","_useState11","_useState12","opSign","setOpSign","_useState13","_useState14","opSignDate","setOpSignDate","_useState15","_useState16","opBttShowed","setOpBttShowed","_useState17","_useState18","qa","setQA","_useState19","_useState20","qaSign","setQaSign","_useState21","_useState22","qaSignDate","setQaSignDate","_useState23","_useState24","qaBttShowed","setQaBttShowed","_useState25","_useState26","setCertData","_useState27","_useState28","calID","setCalID","_useState29","_useState30","comments","setComments","useEffect","CertNum","NextCal","Address1","Address2","Address3","Remarks","convertBlobtoImg","blob","myBlob","Uint8Array","imgBlob","Blob","type","imgURL","window","URL","webkitURL","createObjectURL","setTimeout","revokeObjectURL","tech_signOff","http","put","then","res","newCertNum","SignDate","v","QA_signOff","alert","printPDF","name","page","document","getElementById","html2pdf","jsPDF","format","unit","imageType","output","imageQuality","margin","left","right","top","html2canvas","scrollX","scrollY","scale","loggin","useCORS","TechSignDIV","onClick","QASignDIV","MuiThemeProvider","Table_header","onChange","e","target","history","go","ReactToPrint","pageStyle","trigger","backgroundColor","content","current","tableRow","paddingTop","paddingBottom","scope"],"sourceRoot":""}