{"version":3,"file":"static/js/591.e44f6f45.chunk.js","mappings":"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","sources":["api/MfcCalService.js","api/WOService.js","api/auth-header.js","api/http-common.js","components/DetailMFC.js","components/Header.js"],"sourcesContent":["import http from './http-common'\r\nimport authHeader from './auth-header'\r\n\r\nconst getAll = (recordCount) => {\r\n    return http.get(`/mfccal/all/${recordCount}`)\r\n}\r\n\r\nconst getByWO= (data) => {\r\n    // console.log(`data from getByWO IS ${data}`)\r\n    return http.post(\"/mfccal/getByWO\", { data: data })\r\n}\r\n\r\nconst getBySN= (data) => {\r\n    console.log(`data from getBySN IS ${data}`)\r\n    return http.post(\"/mfccal/getBySN\", { data: data })\r\n}\r\n\r\nconst getLimitAll = (data) => {\r\n    return http.post(\"/mfccal/limitall\", { data: data, headers: authHeader() })  \r\n}\r\n\r\n/* const getLimitAll = (data) => {\r\n    return http.post(\"/mfccal/limitall\", data)\r\n} */\r\n\r\nconst getById = id => {\r\n    return http.get(`/mfccal/onebyid/${id}`)\r\n}\r\n\r\nconst create = data => {\r\n    return http.post(\"/mfccal\", data)\r\n};\r\n\r\nconst update = (id, data) => {\r\n    return http.put(`/mfccal/update/${id}`, data)\r\n}\r\n\r\nconst remove = id => {\r\n    return http.delete(`/mfccal/${id}`)\r\n}\r\n\r\nconst removeAll = () => {\r\n    return http.delete(`/mfccal`)\r\n}\r\n\r\nconst findByName = name => {\r\n    return http.get(`/mfccal?name=${name}`)\r\n}\r\n\r\n/*** equiptment calibration */\r\n/* const getAllEquipCal = () => { \r\n    return http.post(\"mfccal/cert/equipment/all\", {headers: authHeader() })\r\n    // return http.get(\"mfccal/cert/equipment/all\", {headers: authHeader() })\r\n} */\r\n\r\nconst getAllEquipCal = () => { \r\n    return http.get(\"mfccal/cert/equipment/all\")\r\n}\r\n\r\nconst updateEquipCal = (id, data) => {\r\n    return http.put(`/mfccal/cert/equipment/update/${id}`, data)\r\n}\r\n\r\nconst loadCert = (id) => {\r\n    return  http.get(`/mfccal/cert/equipment/download/${id}`, {\r\n            responseType: 'arraybuffer',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/pdf'\r\n            }\r\n        })\r\n}\r\n\r\n\r\nasync function getCertByID(id) {\r\n    return http.get(`/mfccal/cert/getcert/${id}`);\r\n  }\r\n\r\nasync function getDataReportByID(id) {\r\n    return http.get(`/mfccal/cert/getreport/${id}`);\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    getLimitAll,\r\n    getById,\r\n    create,\r\n    update,\r\n    remove,\r\n    removeAll,\r\n    findByName,\r\n    getCertByID,\r\n    getDataReportByID,\r\n    getAllEquipCal,\r\n    updateEquipCal,\r\n    loadCert,\r\n    getByWO,\r\n    getBySN\r\n}\r\n","import http from './http-common'\r\nimport authHeader from './auth-header'\r\n\r\nconst getAll = (data) => {\r\n    return http.post(\"/workorder/all\", { data: data, headers: authHeader() })\r\n}\r\n\r\nconst getWO_NUMs = () => {\r\n    return http.get(\"/workorder/wo_nums\")\r\n}\r\n\r\nconst getWOBySN = sn => {\r\n    return http.get(`/workorder/onebysn/${sn}`)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    getWO_NUMs,\r\n    getWOBySN\r\n} ","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\n  } else {\n    return {};\n  }\n}","import axios from 'axios'\r\nexport default axios.create({\r\n    baseURL: process.env.REACT_APP_BASE_URL\r\n})\r\n\r\n// console.log(\"env: \", process.env)\r\nconsole.log(\"env: \", process.env.REACT_APP_BASE_URL)\r\n\r\n","import React, { useState, useEffect, useRef } from 'react'\r\n//import ReactDatePicker from 'react-datepicker'\r\nimport  { useForm } from 'react-hook-form'\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\n// import '../Form.css'\r\nimport Header from './Header'\r\nimport {Grid} from '@material-ui/core'\r\nimport http from '../api/http-common'\r\nimport MfcCalService from '../api/MfcCalService'\r\nimport { useLocation } from 'react-router-dom'\r\nimport WOService from '../api/WOService'\r\n\r\nexport default function App() {\r\n    /* const data  = props.value\r\n    const id = props.id */\r\n    const location = useLocation()\r\n    console.log(\"location.state: \", location.state)\r\n    const data = location.state.data\r\n    const id = location.state.id\r\n    const { register, handleSubmit, formState: { errors }, reset } = useForm()\r\n    const [mfccal, setMfccal] = useState(data);\r\n    const [wo, setWo] = useState([])\r\n    const [ submitted, setSubmitted ] = useState(false)\r\n    const [ redirect, setRedirect ] = useState(false)\r\n    const [submitResp, setSubmitResp] = useState()\r\n    const headerRedirect = \"MFC Calibration Registry\"\r\n    const headerNew = \"New MFC Calibration Registry\"\r\n    const myWO = data[\"wo\"]\r\n    const arr = []\r\n   \r\n    useEffect(() =>{\r\n        setMfccal(data)\r\n        reset(data)\r\n        console.log(\"wo: \", data[\"wo\"])\r\n        if(myWO) {\r\n            console.log(\"wo is not empty\")\r\n            arr.push(myWO)\r\n            setWo(arr)\r\n        }else{\r\n            // const wo_nums = WOService.getWO_NUMs\r\n            // setWo(wo_nums[\"data\"])\r\n            // console.log(\"woList: \", wo)\r\n        }\r\n      \r\n    }, [data])\r\n\r\n    const onSubmit = formdata => {\r\n        console.log(\">>>SUBMIT>>: \", formdata)\r\n        setMfccal(formdata) //why this didn't update the state \"mfccal\" ?? so using direct value formdata instead of mfccal\r\n        // http.put(`/mfccal/update/${id}`, mfccal)\r\n        http.put(`/mfccal/update/${id}`, formdata) \r\n        .then(res => {\r\n                setSubmitted(true)\r\n            /*     console.log(res.data)\r\n                console.log(res.data.message) */\r\n                setSubmitResp(res.data.message)\r\n            })\r\n            .catch(e => {\r\n                console.log(\">>>> error: \", e)\r\n            })\r\n    }\r\n    \r\n    const newMfcCal = () => {\r\n        setSubmitted(false)\r\n        reset()\r\n    }\r\n    console.log(\">>>errors: \", errors)\r\n    \r\n    const refreshCDMListingPage = () => {\r\n        window.location.reload()\r\n    }\r\n\r\n    const handleClick = () => {\r\n        // window.location.reload()\r\n       window.history.go(-1)\r\n    }\r\n\r\n    const handleSelectOption = () =>{\r\n        console.log(\"handleSelectOption...\")\r\n        http.get(\"/workorder/all\")\r\n        .then((res) => {\r\n            const rtn = res.data.work_orders\r\n            //console.log(\">>rtn: \", rtn)\r\n            const data =rtn.map(item => { \r\n                return item[\"WO Number\"]\r\n            })\r\n            data.splice(0, 0, myWO )\r\n            // console.log(\"wolist: \", data)\r\n            setWo(data)\r\n        })\r\n    }\r\n\r\n    const handleWO_NUMs = () =>{\r\n        //console.log(\"handleWO_NUMs..\")\r\n        http.get(\"/workorder/wo_nums\")\r\n            .then( (result => {\r\n            let wo_nums =  result[\"data\"].data\r\n            //console.log(\">>wonums: \",wo_nums)\r\n            setWo(wo_nums)\r\n        }))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"form-container mfccal\">\r\n                {   submitted ? (\r\n                    <>\r\n                    <div >\r\n                        {/* <h4>You submitted successfully!</h4> */}\r\n                        <h2>{submitResp }</h2>\r\n                    </div>\r\n                    <button className=\"btn btn-success\" onClick={refreshCDMListingPage}>\r\n                        Back to CDM Listing\r\n                    </button>\r\n                    </>\r\n                    ):(\r\n                    <>\r\n                    <div>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Header name =\"MFC Calibration\" />\r\n                            <Grid container xs=\"12\" spacing={3} direction=\"row\" justify=\"flex-center\" alignItems=\"flex-center\">\r\n                                <Grid container xs=\"12\" className=\"field-editable\" spacing=\"3\">\r\n                                    <Grid item xs={3}  className=\"form-control\">    \r\n                                        <label>Work Order</label>\r\n                                        {/* <select onClick={handleSelectOption} value= {mfccal.wo} {...register(\"wo\")}> */}\r\n                                        <select onClick={handleWO_NUMs} {...register(\"wo\")}>\r\n                                            { \r\n                                                // <option value={mfccal.wo} >{mfccal.wo}</option>\r\n                                                wo.map((item, key) => <option key={key} value={item}>{item}</option>) \r\n                                            }\r\n                                        </select >\r\n                                    </Grid>   \r\n                                    <Grid item xs={3} className=\"form-control\">\r\n                                        <label>DUT Address</label>\r\n                                        <select defaultValue={mfccal.dutaddress} {...register(\"dutaddress\")}>\r\n                                            { [\"NULL\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\"].map(value =>(\r\n                                                <option key={value} value={value}>{value} </option>\r\n                                            ))}\r\n                                        </select>\r\n                                        {/* <input type=\"text\" defaultValue={mfccal.dutaddress} {...register(\"dutaddress\")} /> */}\r\n                                    </Grid>\r\n                                    <Grid item xs={3} className=\"form-control\">\r\n                                        <label>As Found/Left</label>\r\n                                        <select defaultValue={mfccal.asfoundleft} {...register(\"asfoundleft\")}>\r\n                                            {\r\n                                                [\"LEFT\", \"FOUND\", \"FOUND LEFT\"].map(value => (\r\n                                                    <option key={value} value={value}>{value}</option>\r\n                                                ))\r\n                                            }\r\n                                        </select>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} className=\"form-control\">\r\n                                        <label>K-Factor</label>\r\n                                        <input type=\"text\" defaultValue={mfccal.kfactor} {...register(\"kfactor\")} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container xs=\"12\" spacing=\"3\" className=\"field-nonedit\">\r\n                                    <Grid item xs={4} className=\"form-control\">\r\n                                        <label>Molbloc</label>\r\n                                        <input type=\"text\" value={mfccal.molbloc} {...register(\"molbloc\")} />\r\n                                    </Grid>\r\n                                    <Grid item xs={4} className=\"form-control\">\r\n                                        <label>Molbox</label>\r\n                                        <input type=\"text\" value={mfccal.molbox} {...register(\"molbox\")} />\r\n                                    </Grid>\r\n                                    <Grid item xs={4} className=\"form-control\">\r\n                                        <label>Ref Range</label>\r\n                                        <input type=\"text\" value={mfccal.refrange} {...register(\"refrange\")} />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={4} className=\"form-control\">\r\n                                        <label>Flow Range</label>\r\n                                        <input type=\"text\" value={mfccal.flowrange} {...register(\"flowrange\")} />\r\n                                    </Grid>\r\n                                    <Grid item xs={4} className=\"form-control\">\r\n                                        <label>DUT Range</label>\r\n                                        <input type=\"text\" value={mfccal.dutoutrange} {...register(\"dutoutrange\")} />\r\n                                    </Grid>\r\n                                    <Grid item xs={4} className=\"form-control\">\r\n                                        <label>DUT Tolerance</label>\r\n                                        <input type=\"text\" value={mfccal.duttolerance} {...register(\"duttolerance\")} />\r\n                                    </Grid>\r\n                                    <Grid item xs={4} className=\"form-control\">\r\n                                        <label>Test Gas</label>\r\n                                        <input type=\"text\" defaultValue={mfccal.testgas} {...register(\"testgas\")} />\r\n                                    </Grid>\r\n                                    <Grid item xs={4} className=\"form-control\">\r\n                                        <label>Process Gas</label>\r\n                                        <input type=\"text\" value={mfccal.procgas} {...register(\"procgas\")} />\r\n                                    </Grid>\r\n                                    <Grid item xs={4} className=\"form-control\">\r\n                                        <label>Pressure(psi)</label>\r\n                                        <input type=\"text\" value={mfccal.psi} {...register(\"psi\")} />\r\n                                    </Grid>\r\n                                    <Grid item xs={4} className=\"form-control\">\r\n                                        <label>Operator</label>\r\n                                        <input type=\"text\" value={mfccal.operator}{...register(\"operator\")} />\r\n                                    </Grid>\r\n                                    <Grid item xs={4} className=\"form-control\">\r\n                                        <label>Station</label>\r\n                                        <input type=\"text\" value={mfccal.station} {...register(\"station\")} />\r\n                                    </Grid>\r\n                                    <Grid item xs={4} className=\"form-control\">\r\n                                        <label>Cal Date</label>\r\n                                        <input type=\"text\" value={mfccal.calDTG} {...register(\"caldt\")} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={3} className=\"form-control submit\" style={{ marginTop: 30 }}>\r\n                                    <input type=\"submit\" value=\"Update\"/>\r\n                                </Grid>\r\n                                {/* <Grid item xs={3} className=\"form-control submit\" style={{ marginTop: 30 }}>\r\n                                    <input type=\"submit\" onClick={handleClick} value=\"Back To Previous\" />\r\n                                </Grid> */}\r\n                            </Grid> \r\n                    </form>\r\n                    </div>\r\n                    <div>\r\n                    <Grid item xs={3} className=\"form-control submit\" style={{ marginTop:20 }}>\r\n                        <input type=\"submit\" onClick={handleClick} value=\"Back To Previous\" />\r\n                    </Grid> \r\n                    </div>\r\n                    </>\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","const  Header = (props) => {\r\n    return  <div className=\"form-header\" style={{textAlign: \"center\"}}>\r\n                <h1>{props.name}</h1>\r\n            </div>\r\n}\r\n\r\nexport default Header;"],"names":["_getCertByID","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","wrap","_context","prev","next","abrupt","http","get","concat","stop","apply","arguments","_getDataReportByID","_callee2","_context2","getAll","recordCount","getLimitAll","data","post","headers","authHeader","getById","create","update","put","remove","delete","removeAll","findByName","name","getCertByID","_x","getDataReportByID","_x2","getAllEquipCal","updateEquipCal","loadCert","responseType","getByWO","getBySN","console","log","getWO_NUMs","getWOBySN","sn","user","JSON","parse","localStorage","getItem","accessToken","axios","baseURL","process","App","location","useLocation","state","_useForm","useForm","register","handleSubmit","errors","formState","reset","_useState","useState","_useState2","_slicedToArray","mfccal","setMfccal","_useState3","_useState4","wo","setWo","_useState5","_useState6","submitted","setSubmitted","_useState7","_useState8","_useState9","_useState10","submitResp","setSubmitResp","myWO","arr","useEffect","push","_jsx","_Fragment","children","className","_jsxs","onClick","window","reload","onSubmit","formdata","then","res","message","catch","e","Header","Grid","container","xs","spacing","direction","justify","alignItems","item","_objectSpread","result","wo_nums","map","key","value","defaultValue","dutaddress","asfoundleft","type","kfactor","molbloc","molbox","refrange","flowrange","dutoutrange","duttolerance","testgas","procgas","psi","operator","station","calDTG","style","marginTop","history","go","props","textAlign"],"sourceRoot":""}