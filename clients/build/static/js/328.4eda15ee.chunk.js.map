{"version":3,"file":"static/js/328.4eda15ee.chunk.js","mappings":"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","sources":["api/AgitatorService.js","api/http-common.js","api/PeopleService.js","components/Agitator.js","components/ConvertBlobToImage.js","components/Header.js","components/GetCurrentDate.js","components/Modal.js","components/PrintPage.js"],"sourcesContent":["import http from './http-common'\r\n\r\nconst getAll = (data) => {\r\n    console.log(\"agitatorService: \" + data)\r\n    return http.post(\"/traveler/agitator/all\", {data})\r\n}\r\n\r\nconst getById = id => {\r\n    return http.get(`/traveler/agitator/${id}`)\r\n}\r\n\r\nconst create = data => {\r\n    console.log(\"API posting data opID: \")\r\n    console.log(data.opID)\r\n    return http.post(\"/traveler/agitator/new\", data)\r\n};\r\n\r\nconst update = (id, data) => {\r\n    return http.put(`/traveler/agitator/${id}`, data)\r\n}\r\n\r\nexport default{\r\n    getAll,\r\n    getById,\r\n    create,\r\n    update,\r\n  \r\n} \r\n\r\n","import axios from 'axios'\r\nexport default axios.create({\r\n    baseURL: process.env.REACT_APP_BASE_URL\r\n})\r\n\r\n// console.log(\"env: \", process.env)\r\nconsole.log(\"env: \", process.env.REACT_APP_BASE_URL)\r\n\r\n","import authHeader from './auth-header'\r\nimport http from './http-common'\r\n\r\nconst getById = id => {\r\n    return http.get(`/people/onebyid/${id}`)\r\n}\r\n\r\nconst getManyByIds = data => {\r\n    console.log(\"api ids: \", data)\r\n    return http.post(`people/manybyids/`, {data: data})\r\n}\r\nexport default {\r\n     getById,\r\n     getManyByIds\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\n// import '../Form.css'\r\nimport Header from './Header'\r\nimport {Grid} from '@material-ui/core'\r\nimport  { useForm } from 'react-hook-form';\r\nimport Modal  from './Modal'\r\nimport AGITATOR from '../api/AgitatorService'\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useLocation } from 'react-router-dom'\r\nimport PeopleService from '../api/PeopleService';\r\nimport ConvertBlobToImage from './ConvertBlobToImage'\r\nimport PrintPage from './PrintPage'\r\n\r\n\r\nexport default function App() {\r\n    const { register, handleSubmit, setValue } = useForm();\r\n    // const [reqDate, setReqDate] = useState(\"\")\r\n    \r\n    const [opID, setOpID] = useState(null)\r\n    const [opDate, setOpDate] = useState(null)\r\n    const [qaID, setQAID] = useState(null)\r\n    const [qaDate, setQADate] = useState(null)\r\n    const [finalQAID, setFinalQAID] = useState(null)\r\n    const [finalQADate, setFinalQADate] = useState(null)\r\n   \r\n    const [signedOpImage, setSignedOpImage] = useState(null)\r\n    const [signedQAImage, setSignedQAImage] = useState(null)\r\n    const [signedFinalQAImage, setSignedFinalQAImage] = useState(null)\r\n    const [signedEditorImage, setsignedEditorImage] = useState(null)\r\n    const [editorDate, setEditorDate] = useState(null)\r\n    const [editorID, setEditorID] = useState(null)\r\n\r\n    const divPrint = useRef(null)\r\n\r\n    const [formData, setFormData] = useState(\r\n        {\r\n            sn: null,\r\n            wo: null,\r\n            opID: null,\r\n            opDate: null,\r\n            model: null,\r\n            modelRev: null,\r\n            po: null,\r\n            customer: null,\r\n            motorName: \"KollMorgen\",\r\n            motorSN: null,\r\n            motorTurn: 'yes',\r\n            range: 'yes',\r\n            labelAttached: 'yes',\r\n            supplier: null,\r\n            techName: null,\r\n            techDate: null,\r\n            qaID: null,\r\n            qaDate: null,\r\n            finalQAID: null,\r\n            finalQADate: null,\r\n            editorID: null,\r\n            editorDate: null,\r\n            comments: '',\r\n            status: ''\r\n        }\r\n    )\r\n    \r\n    const [submitBtt_Disable, setSubmitBtt_Disable] = useState(false)\r\n\r\n    const location = useLocation()\r\n    // console.log(\"location.state: \", location.state)\r\n    const data = location.state.agitator_data\r\n    \r\n    useEffect(()=>{\r\n        console.log(\"Agitator.js RUNNING ..EFFECT\")\r\n        console.log(\"data: \", data)\r\n        let ids = [data.opID, data.qaID, data.finalQAID]\r\n        console.log(\"ids: \", ids)\r\n        /* PeopleService.getManyByIds(ids)\r\n            .then( result => {\r\n                console.log(\"people frontend : \", result.data)\r\n            })\r\n            .catch( (e) => console.log(e)) */\r\n        \r\n        if(data.opID!== null){\r\n            PeopleService.getById(data.opID)\r\n            .then( (result) => {\r\n                console.log(\"people data return: \", result.data.data[0])\r\n                let person = result.data.data[0]\r\n                let signVal = person.signature\r\n                if( signVal !== null ){\r\n                    setSignedOpImage(ConvertBlobToImage(signVal))\r\n                }\r\n            },\r\n            (error)=>{ console.log(\"error \", error)}\r\n            );\r\n        }\r\n\r\n        if(data.qaID!== null){\r\n            setSubmitBtt_Disable(true)\r\n            PeopleService.getById(data.qaID)\r\n            .then( (result) => {\r\n                console.log(\"people data return: \", result.data.data[0])\r\n                let person = result.data.data[0]\r\n                let signVal = person.signature\r\n                if( signVal !== null ){\r\n                    setSignedQAImage(ConvertBlobToImage(signVal))\r\n                }\r\n            },\r\n            (error)=>{ console.log(\"error \", error)}\r\n            );\r\n        }\r\n\r\n        if(data.finalQAID!== null){ \r\n            PeopleService.getById(data.finalQAID)\r\n            .then( (result) => {\r\n                console.log(\"people data return: \", result.data.data[0])\r\n                let person = result.data.data[0]\r\n                let signVal = person.signature\r\n                if( signVal !== null ){\r\n                    setSignedFinalQAImage(ConvertBlobToImage(signVal))\r\n                }\r\n            },\r\n            (error)=>{ console.log(\"error \", error)}\r\n            );\r\n        \r\n        }\r\n        \r\n        if(data.editorID !== null) {\r\n            PeopleService.getById(data.editorID)\r\n            .then( (result) => {\r\n                console.log(\"people data return: \", result.data.data[0])\r\n                let person = result.data.data[0]\r\n                let signVal = person.signature\r\n                if( signVal !== null ){\r\n                    setsignedEditorImage(ConvertBlobToImage(signVal))\r\n                }\r\n            },\r\n            (error)=>{ console.log(\"error \", error)}\r\n            );\r\n        }\r\n        \r\n        \r\n        setOpDate(data.opDate)\r\n        setQADate(data.qaDate)\r\n        setFinalQADate(data.finalQADate)\r\n        setEditorDate(data.editorDate)\r\n        setOpID(data.opID)\r\n        setQAID(data.qaID)\r\n        setFinalQAID(data.finalQAID)\r\n        setEditorID(data.editorID)\r\n\r\n        setFormData(\r\n            {\r\n                sn: data.serial_num,\r\n                wo: data.wo_num,\r\n                model: data.model_num,\r\n                modelRev: data.model_rev,\r\n                po: data.po_num,\r\n                customer: data.customer,\r\n                motorName: data.motor_name,\r\n                motorSN: data.motor_sn,\r\n                motorTurn: data.motor_turn_cw_ccw,\r\n                range: data.run_entire_range,\r\n                labelAttached: data.prod_sn_labels_attached,\r\n                supplier: data.supplier_name,\r\n                techName: data.tech_name,\r\n                techDate: data.tech_date,\r\n                opID: data.opID,\r\n                opDate: data.opDate,\r\n                qaID: data.qaID,\r\n                qaDate: data.qaDate,\r\n                finalQAID: data.finalQAID,\r\n                finalQADate: data.finalQADate,\r\n                editorID: data.editorID,\r\n                editorDate: data.editorDate,\r\n                comments: data.comments,\r\n                status: data.status\r\n            }\r\n        )\r\n    },[data])\r\n      \r\n    const onSubmit = (data) => { \r\n        setSubmitBtt_Disable(true)\r\n        console.log(\"submit data: \")\r\n        console.log(data)\r\n        console.log(\"formdata: \", formData)\r\n        AGITATOR.create(data)\r\n            .then( res => {\r\n                console.log(\"server responding: \")\r\n                console.log(res.data)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            });\r\n    }\r\n\r\n    const handleRefresh = (e) => {\r\n      window.location.reload()\r\n    }\r\n\r\n    const handleChangeSelection = (event) => {\r\n        console.log(\"change event..\")\r\n        let inputName = event.target.name\r\n        setFormData({...formData, [inputName]: event.target.value})\r\n        console.log(\"key: \", event.target)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <div ref={divPrint} className=\"form-container agitator\">\r\n                <style type=\"text/css\" media=\"print\">\r\n                    {\" @page { size: landscape; } \"}\r\n                </style>\r\n                <Header name=\"Agitator Motor Assembly eTRAVELER\" />\r\n                <Grid container xs={12} spacing=\"1\">\r\n                    <div className=\"grid-container\">\r\n                        <div className='item1'>ThermoFisher<br/>Scientific</div>\r\n                        <div className='item2'>Agitator Motor Assembly Traveler</div>\r\n                        <div className='item3'>Doc #: F910-2076-001</div>\r\n                        <div className='item4'>Rev: 06</div>\r\n                        <div className='item5'>ECO: 018638</div>\r\n                        <div className='item6'>Page 1 of 1</div>\r\n                        <div className='item7'>Record Owner: Manufacturing Manager</div>\r\n                        <div className='item8'>Effective Date: 28DEC2022</div>\r\n                    </div> \r\n                </Grid>\r\n                <form className=\"agitator\" id=\"submit-form\" onSubmit={handleSubmit(onSubmit)}>\r\n                    <Grid container xs={12} spacing=\"0\" direction=\"row\" justify=\"flex-start\">\r\n                        <Grid  className=\"form-control agitator\"> \r\n                            <label>Serial Number</label>   \r\n                            <input type=\"text\" name='serial' {...register(\"serial\", setValue(\"serial\", formData.sn), {required: false, maxLength: 30})} />\r\n                            {/* <input type=\"text\" name='serial' value={formData.sn} {...register(\"serial\", {required: false, maxLength: 30})} /> */}\r\n                        </Grid>\r\n                        <Grid  className=\"form-control agitator\"> \r\n                            <label>Work Order Number</label>   \r\n                            <input type=\"text\" placeholder='Work Order Number' {...register(\"woNum\", setValue(\"woNum\", formData.wo) , {required: false, maxLength: 30})} onChange={handleChangeSelection} />\r\n                        </Grid>\r\n                        <Grid className=\"form-control agitator last-row\">   \r\n                                <label>Technician</label>\r\n                                <input type=\"text\" {...register(\"techName\", setValue(\"techName\", formData.techName), {required: false, maxLength: 20})} />\r\n                                <label1>Date</label1>\r\n                                <input type='date'  {...register(\"techDate\", setValue(\"techDate\", formData.techDate))} />\r\n                        </Grid>\r\n                        <Grid  className=\"form-control agitator\"> \r\n                            <label>Model Number</label>   \r\n                            <input type=\"text\" {...register(\"model\", setValue(\"model\", formData.model) , {required: false, maxLength: 30})} onChange={handleChangeSelection}/>\r\n                            <label1>Rev.</label1>   \r\n                            <input type=\"text\" style={{width: '50px', textAlign: 'center'}} {...register(\"modelRev\", setValue(\"modelRev\", formData.modelRev) , {required: false, maxLength: 1})} onChange={handleChangeSelection} />\r\n                        </Grid>\r\n                        <Grid  className=\"form-control agitator last-row\"> \r\n                            <label>PO Number</label>   \r\n                            <input type=\"text\" {...register(\"po\", setValue(\"po\", formData.po) , {required: false, maxLength: 30})} onChange={handleChangeSelection} />\r\n                            <label1>Customer</label1>   \r\n                            <input type=\"text\" {...register(\"customer\", setValue(\"customer\", formData.customer), {required: false, maxLength: 30})} onChange={handleChangeSelection}/>\r\n                        </Grid>\r\n                        <Grid container className=\"form-container motor\" xs=\"12\" spacing={2} direction=\"row\" justify=\"flex-center\" alignItems=\"flex-center\" >\r\n                            <Grid container className='checkbox'>\r\n                                <Grid item xs= {6} className='headline-motor'>Agitator Motor (checkone)</Grid>\r\n                                <Grid item xs= {2} className='headline-motor'>Motor SN</Grid>\r\n                                <Grid item xs= {2} className='headline-motor'>Motor Turn CW & CCW?</Grid>\r\n                                <Grid item xs= {2} className='headline-motor'>Run Entire Range?</Grid>\r\n                                \r\n                                <Grid item xs= {2} className='headline-motor'>\r\n                                    <input className=\"radio\" type='radio' {...register(\"motorName\", setValue(\"motorName\", \"kollmorgen\"))} checked={formData.motorName === \"kollmorgen\" ? true: false} onChange={handleChangeSelection}/>\r\n                                    <label for=\"kollmorgen\">KollMorgen</label> \r\n                                </Grid>\r\n                                <Grid item xs= {2} className='headline-motor'>\r\n                                    <input className=\"radio\" type='radio' {...register(\"motorName\", setValue(\"motorName\", \"maxon\"))}  checked={formData.motorName === \"maxon\" ? true : false} onChange={handleChangeSelection}/>\r\n                                    <label for=\"Maxon\">Maxon</label> \r\n                                </Grid>\r\n                                <Grid item xs= {2} className='headline-motor'>\r\n                                    <input className=\"radio\" type='radio' {...register(\"motorName\", setValue(\"motorName\", \"teknic\"))}  checked={formData.motorName === \"teknic\" ? true : false} onChange={handleChangeSelection}/>\r\n                                    <label for=\"Teknic\">Teknic</label> \r\n                                </Grid>\r\n                            \r\n                                <Grid item xs= {2} className='headline-motor'>\r\n                                    <input type='text' name=\"motorSN\" placeholder='Motor SN' {...register(\"motorSN\", setValue(\"motorSN\", formData.motorSN))} onChange={handleChangeSelection}/>\r\n                                </Grid>\r\n                                <Grid item xs= {2} className='headline-motor'>\r\n                                    <input className=\"radio\" type='radio' {...register(\"motorTurn\")} value=\"yes\" checked={formData.motorTurn === \"yes\" ? true : false} onChange={handleChangeSelection}/>\r\n                                    <label for=\"CW\">Yes</label>\r\n                                    <input className=\"radio\" type='radio' {...register(\"motorTurn\")} value='no' checked={formData.motorTurn === \"no\" ? true : false} onChange={handleChangeSelection}/>\r\n                                    <label for=\"ccw\">No</label> \r\n                                </Grid>\r\n                                <Grid item xs= {2} className='headline-motor'>\r\n                                    <input className=\"radio\" type='radio' {...register(\"range\")} value='yes' checked={formData.range === \"yes\" ? true : false} onChange={handleChangeSelection} />\r\n                                    <lable for=\"range\">Yes</lable>\r\n                                    <input className=\"radio\" type='radio' {...register(\"range\")} value='no' checked={formData.range === \"no\" ? true : false} onChange={handleChangeSelection}/>\r\n                                    <lable for=\"range\">No</lable>\r\n                                </Grid>\r\n                            </Grid>\r\n                            {/* <Grid item xs={12} className='form-control agitator'> */}\r\n                                <Grid item={9} className='label_attached'>\r\n                                    Is the Product and Serial Number Label attached to the Agitator Motor:\r\n                                </Grid> \r\n                                <Grid item={3}>\r\n                                    <input className=\"radio\" type='radio' {...register(\"labelAttached\")} value='yes' checked={formData.labelAttached === \"yes\" ? true : false}/>\r\n                                    <lable for=\"prodsnLabel\">Yes</lable>\r\n                                    <input className=\"radio\" type='radio' {...register(\"labelAttached\")} value='no' checked={formData.labelAttached === \"no\" ? true : false}/>\r\n                                    <lable for=\"prodsnLabel\">No</lable>\r\n                                </Grid>\r\n                            {/* </Grid> */}\r\n                            <Grid  item xs={12} className=\"form-control agitator\"> \r\n                                <label>Supplier Name</label>   \r\n                                <input type=\"text\" placeholder='Supplier name' value={formData.supplier} {...register(\"supplier\", {required: false, maxLength: 30})} onChange={handleChangeSelection} />\r\n                            </Grid>\r\n                            <Grid item xs=\"12\"className='form-control agitator' style={{display: \"flex\"}} >\r\n                                <Grid item={2}>\r\n                                    <label>Performed By</label>\r\n                                </Grid>\r\n                                <Grid item xs={3} name='qa'>\r\n                                    {\r\n                                        signedOpImage === null ? (<Modal role=\"Tech\" signDate={opDate} funct={setOpID} setDateFunct={setOpDate}/>)\r\n                                        : (<img src={signedOpImage} alt=''></img>)\r\n                                    }\r\n                                    <input type='hidden' {...register(\"opID\", {value: {opID}.opID})} />\r\n                                </Grid>\r\n                                <Grid item={3} className='sign-date' style={{display:\"flex\", flexDirection: \"row\", alignItems: \"center\"}} >\r\n                                    <label>Date</label>\r\n                                    {/* <textarea {...register(\"opDate\", setValue(\"opDate\",opDate))} /> */}\r\n                                    <input type='date'  {...register(\"opDate\", setValue(\"opDate\",opDate))} /> \r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid className=\"form-control agitator\">\r\n                                <p>QA Reviewed this Traveler and Product Under Test for conformance to specifications provided.</p>\r\n                            </Grid>\r\n                            {/* <Grid className=\"form-control agitator last-row\">    */}\r\n                            <Grid item xs=\"12\"className='form-control agitator' style={{display: \"flex\"}} >\r\n                                <Grid item={2}>\r\n                                    <label>QA Reviewed By</label>\r\n                                </Grid>\r\n                                <Grid item xs={3} name='qa'>\r\n                                    { \r\n                                        signedQAImage === null ? (<Modal role=\"QA\" signDate={qaDate} funct={setQAID} setDateFunct={setQADate}/>)\r\n                                        : (<img src={signedQAImage} alt=''></img>)\r\n                                    }\r\n                                    <input type='hidden' {...register(\"qaID\", setValue(\"qaID\", qaID))} />\r\n                                    {/* <input type='hidden' {...register(\"qaID\", {value: {qaID}.qaID})} /> */}\r\n                                </Grid>\r\n                                <Grid item={3} className='sign-date' style={{display:\"flex\", flexDirection: \"row\", alignItems: \"center\"}} >\r\n                                    <label>Date</label>\r\n                                    {/* <input type='date'  {...register(\"qaDate\", setValue('qaDate',formData.qaDate))} /> */}\r\n                                    <input type='date'  {...register(\"qaDate\", setValue('qaDate', qaDate))} />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs=\"12\"className='form-control agitator' style={{display: \"flex\"}} >\r\n                                <Grid item={2}>\r\n                                    <label>Final QA Reviewed By</label>\r\n                                </Grid>\r\n                                <Grid item xs={3} name='qa'>\r\n                                    { \r\n                                        signedFinalQAImage === null ? (<Modal role=\"FinalQA\" signDate={finalQADate} funct={setFinalQAID} setDateFunct={setFinalQADate}/>)\r\n                                        : (<img src={signedFinalQAImage} alt=''></img>)\r\n                                    }\r\n                                    <input type='hidden' {...register(\"finalQAID\", setValue(\"finalQAID\",finalQAID))} />\r\n                                    {/* <input type='hidden' {...register(\"finalQAID\", {value: {finalQAID}.finalQAID})} /> */}\r\n                                </Grid>\r\n                                <Grid item={3} className='sign-date' style={{display:\"flex\", flexDirection: \"row\", alignItems: \"center\"}} >\r\n                                    <label>Date</label>\r\n                                    <input type='date' {...register(\"finalQADate\", setValue(\"finalQADate\", finalQADate))} />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs=\"12\" className='form-control agitator' style={{display: \"flex\"}} >\r\n                                <Grid item={2}>\r\n                                    <label>Edited By</label>\r\n                                </Grid>\r\n                                <Grid item xs={3} name='qa'>\r\n                                    { \r\n                                        signedEditorImage === null ? (<Modal role=\"Tech\" signDate={editorDate} funct={setEditorID} setDateFunct={setEditorDate}/>)\r\n                                        : (<img src={signedEditorImage} alt=''></img>)\r\n                                    }\r\n                                    <input type='hidden' {...register(\"editorID\", setValue(\"editorID\", editorID))} />\r\n                                </Grid>\r\n                                <Grid item={3} className='sign-date'  >\r\n                                    <label>Date</label>\r\n                                    <input type='date'  {...register(\"editorDate\", setValue(\"editorDate\",editorDate))} />\r\n                                </Grid>\r\n                                <Grid item={4} style={{display:\"flex\", flexDirection: \"row\", marginLeft: \"15px\"}}>\r\n                                    <label style={{width: \"100px\"}}>Comments</label>\r\n                                    <textarea style={{ width: 'fit-content'}} {...register(\"comments\", setValue(\"comments\", formData.comments))}></textarea>\r\n                                </Grid>\r\n                                <Grid>\r\n                                    <input type='hidden' {...register(\"status\", setValue(\"status\", \"EDITED\"))} />\r\n                                </Grid>\r\n                            \r\n                            </Grid>\r\n                            {/* <Grid className=\"form-control agitator last-row\">\r\n                                <input type=\"submit\" class= { submitBtt_Disable ? \"submit-btt-disable\" : \"btn btn-primary\"}/>\r\n                            </Grid> */}\r\n                        </Grid>\r\n                    </Grid> \r\n                </form>\r\n                \r\n            </div>\r\n            <Grid container xs={12} spacing=\"0\" direction=\"row\" justify=\"flex-start\" style={{paddingTop: '15px'}}>\r\n                <Grid item xs={2}>\r\n                    <Button variant=\"primary\" type='submit' form='submit-form' className= { submitBtt_Disable ? \"submit-btt-disable\" : \"btt-enable\"}>\r\n                        Submit Changes\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <PrintPage pageName=\"PRINT\" divRef = {divPrint} />\r\n                </Grid>\r\n                {/* <Button  variant=\"info\"  className='refresh' style={{backgroundColor: 'white'}} onClick={handleRefresh}>Refreshing</Button> */}\r\n            </Grid>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nexport default function App(blob){\r\n    /*  const base64String = btoa(String.fromCharCode.apply(null,blob.data))\r\n     const imgBlob = `data:image/jpeg;base64,${base64String}`\r\n     return imgBlob */\r\n     const myBlob = new Uint8Array(blob.data)\r\n     const imgBlob = new Blob([myBlob], {type: 'image/jpeg'}) \r\n     const urlCreator = window.URL || window.webkitURL\r\n     const imgURL =urlCreator.createObjectURL(imgBlob)\r\n     setTimeout(() => {\r\n         URL.revokeObjectURL(imgBlob)\r\n     }, 100);\r\n     // URL.revokeObjectURL(imgBlob)\r\n     return imgURL\r\n }\r\n\r\n","const  Header = (props) => {\r\n    return  <div className=\"form-header\" style={{textAlign: \"center\"}}>\r\n                <h1>{props.name}</h1>\r\n            </div>\r\n}\r\n\r\nexport default Header;","const DATE_OPTION = { year: 'numeric', month: 'numeric', day: 'numeric'}\r\nexport default function App(){\r\n    let today = new Date();\r\n    console.log(\"tolcacateDateString: \", today.toISOString().slice(0,10))\r\n    return today.toISOString().slice(0,10)\r\n    // return today.toLocaleString('en-US', DATE_OPTION)\r\n    //return ((today.get + 1) + \"-\" + today.getDate() + \"-\" + today.getFullYear())\r\n    // return new Date().toLocaleString()\r\n}","import { useEffect, useState } from 'react';\r\nimport {Grid} from '@material-ui/core'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport '../Form.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport authService_admin from \"../api/auth.service_admin\";\r\nimport ConvertBlobToImage from \"./ConvertBlobToImage\"\r\nimport GetcurentDate from \"./GetCurrentDate\"\r\n\r\nfunction App(props) {\r\n//passing setOpID set state from NewAgitator to update the OpID state variable\r\n  const setID = props.funct;\r\n  const setDate = props.setDateFunct;\r\n  const role = props.role\r\n\r\n  console.log(\"id,date,role: \", role )\r\n  \r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    password: ''\r\n  })\r\n  const [signature, setSignature] = useState(null)\r\n  const [show, setShow] = useState(false);\r\n  const [successLogin, SetSuccessLogin] = useState(false)\r\n  const [errorMsg, setErrorMsg] = useState(\"\")\r\n  // const [opDate, setDate] = useState(null)\r\n \r\n  useEffect(() => {\r\n\r\n  },[])\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n\r\n    authService_admin.login(formData.username, formData.password).then(\r\n      (data) => {\r\n       /*  alert(\"login successful!\")\r\n        console.log(\"peopleID: \" + data.id);\r\n        console.log(\"signature: \")\r\n        console.log(data.signature); */\r\n        /* SetSuccessLogin(true)\r\n        setSignature(ConvertBlobToImage(data.signature))\r\n        setDate(GetcurentDate) */\r\n        setID(data.id) //update OpID in NewAgitator.js\r\n        setShow(false)\r\n        console.log(\"pass role value: \", role)\r\n        console.log(\"role: \", data.role)\r\n        if((data.role === role ) || (data.role === \"Admin\")){\r\n          SetSuccessLogin(true)\r\n          setSignature(ConvertBlobToImage(data.signature))\r\n          setDate(GetcurentDate)\r\n        }\r\n        else{\r\n          alert(\"Your role is not allowed to sign off!!\")\r\n        }\r\n      },\r\n      (error) => {\r\n        setErrorMsg(\"Login Failed!\")\r\n        // alert(\"login Failed!\")\r\n        // console.log(error)\r\n        const resMessage =\r\n          (error.response &&\r\n            error.response.data &&\r\n            error.response.data.message) ||\r\n          error.message ||\r\n          error.toString();\r\n      }\r\n    );\r\n  }\r\n\r\n  const SignOffDIV = () => {\r\n    return (\r\n      <>\r\n         <Button variant=\"primary\" className=\"agitator-sign-bttn\" onClick={handleShow}>\r\n            Sign Off\r\n          </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  const SignImageDIV = () => {\r\n    return(\r\n      <>\r\n        <img src={signature}></img>\r\n        {/* <input type='hidden' name='opID' value={operatorID} /> */}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n        <Grid item={6} >\r\n          {successLogin === false ? <SignOffDIV /> : <SignImageDIV />}\r\n          {/* <label>Date</label> */}\r\n          {/* NEED TO DO!!! */}\r\n          {/* <label style={{fontSize: \"medium\"}}>{opDate}</label>  */}\r\n        </Grid>\r\n    </div>\r\n    <Grid container xs={1} spacing=\"0\" direction=\"row\" justify=\"flex-start\">\r\n        <Grid >\r\n          <Modal\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n          >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Login</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n              <Form>\r\n                <Form.Group className=\"mb-3\" controlId=\"Modal.ControlInput1\">\r\n                  <Form.Label>Enter User Name</Form.Label>\r\n                  <Form.Control type=\"username\" placeholder=\"user name\" required={true} value={formData.username} onChange={(e)=> setFormData({...formData, username: e.target.value})}/>\r\n                </Form.Group>\r\n                <Form.Group className=\"password\" controlId=\"Modal.Password\">\r\n                  <Form.Label>Enter Password</Form.Label>\r\n                  <Form.Control type='password' rows={3} required={true} value={formData.password} onChange={(e)=> setFormData({...formData, password: e.target.value})}/>\r\n                </Form.Group>\r\n              </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <span style={{color: \"red\"}}>{errorMsg}</span>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={handleSubmit}>Submit</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        </Grid>\r\n    </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import { red } from \"@material-ui/core/colors\";\r\nimport React from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\n\r\nconst PrintPage = (props) => {\r\n    const divPrint = props.divRef\r\n    const pageName = props.pageName\r\n    const pageStyle =\r\n    `\r\n    @page {\r\n        { size: A4 landscape; };\r\n    }\r\n  \r\n    @media all {\r\n      .pagebreak {\r\n        display: none;\r\n      }\r\n    }\r\n  \r\n    @media print {\r\n      .pagebreak {\r\n        page-break-before: always;\r\n      }\r\n    }\r\n  `;\r\n    // const pageStyle = `@media print { @page {\\ size: 'A4 landscape';\\ }}`;\r\n    // const pageStyle = `{ size: 2.5in 4in }`;\r\n    return (\r\n        <div>\r\n            <ReactToPrint\r\n                pageStyle={pageStyle}\r\n                trigger={() => <button style={{height: \"35px\", backgroundColor: \"green\"}}>{pageName}!</button>}\r\n                content={() => divPrint.current}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PrintPage;"],"names":["getAll","data","console","log","http","post","getById","id","get","concat","create","opID","update","put","axios","baseURL","process","getManyByIds","App","_useForm","useForm","register","handleSubmit","setValue","_useState","useState","_useState2","_slicedToArray","setOpID","_useState3","_useState4","opDate","setOpDate","_useState5","_useState6","qaID","setQAID","_useState7","_useState8","qaDate","setQADate","_useState9","_useState10","finalQAID","setFinalQAID","_useState11","_useState12","finalQADate","setFinalQADate","_useState13","_useState14","signedOpImage","setSignedOpImage","_useState15","_useState16","signedQAImage","setSignedQAImage","_useState17","_useState18","signedFinalQAImage","setSignedFinalQAImage","_useState19","_useState20","signedEditorImage","setsignedEditorImage","_useState21","_useState22","editorDate","setEditorDate","_useState23","_useState24","editorID","setEditorID","divPrint","useRef","_useState25","sn","wo","model","modelRev","po","customer","motorName","motorSN","motorTurn","range","labelAttached","supplier","techName","techDate","comments","status","_useState26","formData","setFormData","_useState27","_useState28","submitBtt_Disable","setSubmitBtt_Disable","useLocation","state","agitator_data","useEffect","ids","PeopleService","then","result","signVal","signature","ConvertBlobToImage","error","serial_num","wo_num","model_num","model_rev","po_num","motor_name","motor_sn","motor_turn_cw_ccw","run_entire_range","prod_sn_labels_attached","supplier_name","tech_name","tech_date","handleChangeSelection","event","inputName","target","name","_objectSpread","_defineProperty","value","_jsx","_Fragment","children","_jsxs","ref","className","type","media","Header","Grid","container","xs","spacing","onSubmit","AGITATOR","res","catch","e","direction","justify","required","maxLength","placeholder","onChange","style","width","textAlign","alignItems","item","checked","for","display","Modal","role","signDate","funct","setDateFunct","src","alt","flexDirection","marginLeft","paddingTop","Button","variant","form","PrintPage","pageName","divRef","blob","myBlob","Uint8Array","imgBlob","Blob","imgURL","window","URL","webkitURL","createObjectURL","setTimeout","revokeObjectURL","props","today","Date","toISOString","slice","setID","setDate","username","password","setSignature","show","setShow","successLogin","SetSuccessLogin","errorMsg","setErrorMsg","handleClose","handleShow","SignOffDIV","onClick","SignImageDIV","onHide","backdrop","keyboard","closeButton","Title","Body","Form","Group","controlId","Label","Control","rows","Footer","color","preventDefault","authService_admin","login","GetcurentDate","alert","response","message","toString","ReactToPrint","pageStyle","trigger","height","backgroundColor","content","current"],"sourceRoot":""}